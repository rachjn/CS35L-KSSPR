"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/retry-as-promised";
exports.ids = ["vendor-chunks/retry-as-promised"];
exports.modules = {

/***/ "(action-browser)/../node_modules/retry-as-promised/dist/index.js":
/*!*******************************************************!*\
  !*** ../node_modules/retry-as-promised/dist/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.retryAsPromised = exports.TimeoutError = void 0;\nclass TimeoutError extends Error {\n    constructor(message, previousError) {\n        super(message);\n        this.name = \"TimeoutError\";\n        this.previous = previousError;\n    }\n}\nexports.TimeoutError = TimeoutError;\nfunction matches(match, err) {\n    if (typeof match === 'function') {\n        try {\n            if (err instanceof match)\n                return true;\n        }\n        catch (_) {\n            return !!match(err);\n        }\n    }\n    if (match === err.toString())\n        return true;\n    if (match === err.message)\n        return true;\n    return match instanceof RegExp\n        && (match.test(err.message) || match.test(err.toString()));\n}\nfunction retryAsPromised(callback, optionsInput) {\n    if (!callback || !optionsInput) {\n        throw new Error('retry-as-promised must be passed a callback and a options set');\n    }\n    optionsInput = (typeof optionsInput === \"number\" ? { max: optionsInput } : optionsInput);\n    const options = {\n        $current: \"$current\" in optionsInput ? optionsInput.$current : 1,\n        max: optionsInput.max,\n        timeout: optionsInput.timeout || undefined,\n        match: optionsInput.match ? Array.isArray(optionsInput.match) ? optionsInput.match : [optionsInput.match] : [],\n        backoffBase: optionsInput.backoffBase === undefined ? 100 : optionsInput.backoffBase,\n        backoffExponent: optionsInput.backoffExponent || 1.1,\n        report: optionsInput.report,\n        name: optionsInput.name || callback.name || 'unknown'\n    };\n    if (options.match && !Array.isArray(options.match))\n        options.match = [options.match];\n    if (options.report)\n        options.report('Trying ' + options.name + ' #' + options.$current + ' at ' + new Date().toLocaleTimeString(), options);\n    return new Promise(function (resolve, reject) {\n        let timeout;\n        let backoffTimeout;\n        let lastError;\n        if (options.timeout) {\n            timeout = setTimeout(function () {\n                if (backoffTimeout)\n                    clearTimeout(backoffTimeout);\n                reject(new TimeoutError(options.name + ' timed out', lastError));\n            }, options.timeout);\n        }\n        Promise.resolve(callback({ current: options.$current }))\n            .then(resolve)\n            .then(function () {\n            if (timeout)\n                clearTimeout(timeout);\n            if (backoffTimeout)\n                clearTimeout(backoffTimeout);\n        })\n            .catch(function (err) {\n            if (timeout)\n                clearTimeout(timeout);\n            if (backoffTimeout)\n                clearTimeout(backoffTimeout);\n            lastError = err;\n            if (options.report)\n                options.report((err && err.toString()) || err, options, err);\n            // Should not retry if max has been reached\n            var shouldRetry = options.$current < options.max;\n            if (!shouldRetry)\n                return reject(err);\n            shouldRetry = options.match.length === 0 || options.match.some(function (match) {\n                return matches(match, err);\n            });\n            if (!shouldRetry)\n                return reject(err);\n            var retryDelay = options.backoffBase * Math.pow(options.backoffExponent, options.$current - 1);\n            // Do some accounting\n            options.$current++;\n            if (options.report)\n                options.report(`Retrying ${options.name} (${options.$current})`, options);\n            if (retryDelay) {\n                // Use backoff function to ease retry rate\n                if (options.report)\n                    options.report(`Delaying retry of ${options.name} by ${retryDelay}`, options);\n                backoffTimeout = setTimeout(function () {\n                    retryAsPromised(callback, options)\n                        .then(resolve)\n                        .catch(reject);\n                }, retryDelay);\n            }\n            else {\n                retryAsPromised(callback, options)\n                    .then(resolve)\n                    .catch(reject);\n            }\n        });\n    });\n}\nexports.retryAsPromised = retryAsPromised;\n;\nexports[\"default\"] = retryAsPromised;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uLi9ub2RlX21vZHVsZXMvcmV0cnktYXMtcHJvbWlzZWQvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUIsR0FBRyxvQkFBb0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlELG9CQUFvQjtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsbUNBQW1DLDJCQUEyQjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsY0FBYyxHQUFHLGlCQUFpQjtBQUM3RTtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsY0FBYyxLQUFLLFdBQVc7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xpZW50Ly4uL25vZGVfbW9kdWxlcy9yZXRyeS1hcy1wcm9taXNlZC9kaXN0L2luZGV4LmpzP2QxMDEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5yZXRyeUFzUHJvbWlzZWQgPSBleHBvcnRzLlRpbWVvdXRFcnJvciA9IHZvaWQgMDtcbmNsYXNzIFRpbWVvdXRFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBwcmV2aW91c0Vycm9yKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLm5hbWUgPSBcIlRpbWVvdXRFcnJvclwiO1xuICAgICAgICB0aGlzLnByZXZpb3VzID0gcHJldmlvdXNFcnJvcjtcbiAgICB9XG59XG5leHBvcnRzLlRpbWVvdXRFcnJvciA9IFRpbWVvdXRFcnJvcjtcbmZ1bmN0aW9uIG1hdGNoZXMobWF0Y2gsIGVycikge1xuICAgIGlmICh0eXBlb2YgbWF0Y2ggPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmIChlcnIgaW5zdGFuY2VvZiBtYXRjaClcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoXykge1xuICAgICAgICAgICAgcmV0dXJuICEhbWF0Y2goZXJyKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAobWF0Y2ggPT09IGVyci50b1N0cmluZygpKVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICBpZiAobWF0Y2ggPT09IGVyci5tZXNzYWdlKVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICByZXR1cm4gbWF0Y2ggaW5zdGFuY2VvZiBSZWdFeHBcbiAgICAgICAgJiYgKG1hdGNoLnRlc3QoZXJyLm1lc3NhZ2UpIHx8IG1hdGNoLnRlc3QoZXJyLnRvU3RyaW5nKCkpKTtcbn1cbmZ1bmN0aW9uIHJldHJ5QXNQcm9taXNlZChjYWxsYmFjaywgb3B0aW9uc0lucHV0KSB7XG4gICAgaWYgKCFjYWxsYmFjayB8fCAhb3B0aW9uc0lucHV0KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcigncmV0cnktYXMtcHJvbWlzZWQgbXVzdCBiZSBwYXNzZWQgYSBjYWxsYmFjayBhbmQgYSBvcHRpb25zIHNldCcpO1xuICAgIH1cbiAgICBvcHRpb25zSW5wdXQgPSAodHlwZW9mIG9wdGlvbnNJbnB1dCA9PT0gXCJudW1iZXJcIiA/IHsgbWF4OiBvcHRpb25zSW5wdXQgfSA6IG9wdGlvbnNJbnB1dCk7XG4gICAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICAgICAgJGN1cnJlbnQ6IFwiJGN1cnJlbnRcIiBpbiBvcHRpb25zSW5wdXQgPyBvcHRpb25zSW5wdXQuJGN1cnJlbnQgOiAxLFxuICAgICAgICBtYXg6IG9wdGlvbnNJbnB1dC5tYXgsXG4gICAgICAgIHRpbWVvdXQ6IG9wdGlvbnNJbnB1dC50aW1lb3V0IHx8IHVuZGVmaW5lZCxcbiAgICAgICAgbWF0Y2g6IG9wdGlvbnNJbnB1dC5tYXRjaCA/IEFycmF5LmlzQXJyYXkob3B0aW9uc0lucHV0Lm1hdGNoKSA/IG9wdGlvbnNJbnB1dC5tYXRjaCA6IFtvcHRpb25zSW5wdXQubWF0Y2hdIDogW10sXG4gICAgICAgIGJhY2tvZmZCYXNlOiBvcHRpb25zSW5wdXQuYmFja29mZkJhc2UgPT09IHVuZGVmaW5lZCA/IDEwMCA6IG9wdGlvbnNJbnB1dC5iYWNrb2ZmQmFzZSxcbiAgICAgICAgYmFja29mZkV4cG9uZW50OiBvcHRpb25zSW5wdXQuYmFja29mZkV4cG9uZW50IHx8IDEuMSxcbiAgICAgICAgcmVwb3J0OiBvcHRpb25zSW5wdXQucmVwb3J0LFxuICAgICAgICBuYW1lOiBvcHRpb25zSW5wdXQubmFtZSB8fCBjYWxsYmFjay5uYW1lIHx8ICd1bmtub3duJ1xuICAgIH07XG4gICAgaWYgKG9wdGlvbnMubWF0Y2ggJiYgIUFycmF5LmlzQXJyYXkob3B0aW9ucy5tYXRjaCkpXG4gICAgICAgIG9wdGlvbnMubWF0Y2ggPSBbb3B0aW9ucy5tYXRjaF07XG4gICAgaWYgKG9wdGlvbnMucmVwb3J0KVxuICAgICAgICBvcHRpb25zLnJlcG9ydCgnVHJ5aW5nICcgKyBvcHRpb25zLm5hbWUgKyAnICMnICsgb3B0aW9ucy4kY3VycmVudCArICcgYXQgJyArIG5ldyBEYXRlKCkudG9Mb2NhbGVUaW1lU3RyaW5nKCksIG9wdGlvbnMpO1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGxldCB0aW1lb3V0O1xuICAgICAgICBsZXQgYmFja29mZlRpbWVvdXQ7XG4gICAgICAgIGxldCBsYXN0RXJyb3I7XG4gICAgICAgIGlmIChvcHRpb25zLnRpbWVvdXQpIHtcbiAgICAgICAgICAgIHRpbWVvdXQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoYmFja29mZlRpbWVvdXQpXG4gICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dChiYWNrb2ZmVGltZW91dCk7XG4gICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBUaW1lb3V0RXJyb3Iob3B0aW9ucy5uYW1lICsgJyB0aW1lZCBvdXQnLCBsYXN0RXJyb3IpKTtcbiAgICAgICAgICAgIH0sIG9wdGlvbnMudGltZW91dCk7XG4gICAgICAgIH1cbiAgICAgICAgUHJvbWlzZS5yZXNvbHZlKGNhbGxiYWNrKHsgY3VycmVudDogb3B0aW9ucy4kY3VycmVudCB9KSlcbiAgICAgICAgICAgIC50aGVuKHJlc29sdmUpXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAodGltZW91dClcbiAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XG4gICAgICAgICAgICBpZiAoYmFja29mZlRpbWVvdXQpXG4gICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KGJhY2tvZmZUaW1lb3V0KTtcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgICAgICBpZiAodGltZW91dClcbiAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XG4gICAgICAgICAgICBpZiAoYmFja29mZlRpbWVvdXQpXG4gICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KGJhY2tvZmZUaW1lb3V0KTtcbiAgICAgICAgICAgIGxhc3RFcnJvciA9IGVycjtcbiAgICAgICAgICAgIGlmIChvcHRpb25zLnJlcG9ydClcbiAgICAgICAgICAgICAgICBvcHRpb25zLnJlcG9ydCgoZXJyICYmIGVyci50b1N0cmluZygpKSB8fCBlcnIsIG9wdGlvbnMsIGVycik7XG4gICAgICAgICAgICAvLyBTaG91bGQgbm90IHJldHJ5IGlmIG1heCBoYXMgYmVlbiByZWFjaGVkXG4gICAgICAgICAgICB2YXIgc2hvdWxkUmV0cnkgPSBvcHRpb25zLiRjdXJyZW50IDwgb3B0aW9ucy5tYXg7XG4gICAgICAgICAgICBpZiAoIXNob3VsZFJldHJ5KVxuICAgICAgICAgICAgICAgIHJldHVybiByZWplY3QoZXJyKTtcbiAgICAgICAgICAgIHNob3VsZFJldHJ5ID0gb3B0aW9ucy5tYXRjaC5sZW5ndGggPT09IDAgfHwgb3B0aW9ucy5tYXRjaC5zb21lKGZ1bmN0aW9uIChtYXRjaCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBtYXRjaGVzKG1hdGNoLCBlcnIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAoIXNob3VsZFJldHJ5KVxuICAgICAgICAgICAgICAgIHJldHVybiByZWplY3QoZXJyKTtcbiAgICAgICAgICAgIHZhciByZXRyeURlbGF5ID0gb3B0aW9ucy5iYWNrb2ZmQmFzZSAqIE1hdGgucG93KG9wdGlvbnMuYmFja29mZkV4cG9uZW50LCBvcHRpb25zLiRjdXJyZW50IC0gMSk7XG4gICAgICAgICAgICAvLyBEbyBzb21lIGFjY291bnRpbmdcbiAgICAgICAgICAgIG9wdGlvbnMuJGN1cnJlbnQrKztcbiAgICAgICAgICAgIGlmIChvcHRpb25zLnJlcG9ydClcbiAgICAgICAgICAgICAgICBvcHRpb25zLnJlcG9ydChgUmV0cnlpbmcgJHtvcHRpb25zLm5hbWV9ICgke29wdGlvbnMuJGN1cnJlbnR9KWAsIG9wdGlvbnMpO1xuICAgICAgICAgICAgaWYgKHJldHJ5RGVsYXkpIHtcbiAgICAgICAgICAgICAgICAvLyBVc2UgYmFja29mZiBmdW5jdGlvbiB0byBlYXNlIHJldHJ5IHJhdGVcbiAgICAgICAgICAgICAgICBpZiAob3B0aW9ucy5yZXBvcnQpXG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnMucmVwb3J0KGBEZWxheWluZyByZXRyeSBvZiAke29wdGlvbnMubmFtZX0gYnkgJHtyZXRyeURlbGF5fWAsIG9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIGJhY2tvZmZUaW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHJ5QXNQcm9taXNlZChjYWxsYmFjaywgb3B0aW9ucylcbiAgICAgICAgICAgICAgICAgICAgICAgIC50aGVuKHJlc29sdmUpXG4gICAgICAgICAgICAgICAgICAgICAgICAuY2F0Y2gocmVqZWN0KTtcbiAgICAgICAgICAgICAgICB9LCByZXRyeURlbGF5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHJ5QXNQcm9taXNlZChjYWxsYmFjaywgb3B0aW9ucylcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4ocmVzb2x2ZSlcbiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKHJlamVjdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxuZXhwb3J0cy5yZXRyeUFzUHJvbWlzZWQgPSByZXRyeUFzUHJvbWlzZWQ7XG47XG5leHBvcnRzLmRlZmF1bHQgPSByZXRyeUFzUHJvbWlzZWQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/../node_modules/retry-as-promised/dist/index.js\n");

/***/ })

};
;