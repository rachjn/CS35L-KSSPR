/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/wkx";
exports.ids = ["vendor-chunks/wkx"];
exports.modules = {

/***/ "(action-browser)/../node_modules/wkx/lib/binaryreader.js":
/*!***********************************************!*\
  !*** ../node_modules/wkx/lib/binaryreader.js ***!
  \***********************************************/
/***/ ((module) => {

eval("module.exports = BinaryReader;\r\n\r\nfunction BinaryReader(buffer, isBigEndian) {\r\n    this.buffer = buffer;\r\n    this.position = 0;\r\n    this.isBigEndian = isBigEndian || false;\r\n}\r\n\r\nfunction _read(readLE, readBE, size) {\r\n    return function () {\r\n        var value;\r\n\r\n        if (this.isBigEndian)\r\n            value = readBE.call(this.buffer, this.position);\r\n        else\r\n            value = readLE.call(this.buffer, this.position);\r\n\r\n        this.position += size;\r\n\r\n        return value;\r\n    };\r\n}\r\n\r\nBinaryReader.prototype.readUInt8 = _read(Buffer.prototype.readUInt8, Buffer.prototype.readUInt8, 1);\r\nBinaryReader.prototype.readUInt16 = _read(Buffer.prototype.readUInt16LE, Buffer.prototype.readUInt16BE, 2);\r\nBinaryReader.prototype.readUInt32 = _read(Buffer.prototype.readUInt32LE, Buffer.prototype.readUInt32BE, 4);\r\nBinaryReader.prototype.readInt8 = _read(Buffer.prototype.readInt8, Buffer.prototype.readInt8, 1);\r\nBinaryReader.prototype.readInt16 = _read(Buffer.prototype.readInt16LE, Buffer.prototype.readInt16BE, 2);\r\nBinaryReader.prototype.readInt32 = _read(Buffer.prototype.readInt32LE, Buffer.prototype.readInt32BE, 4);\r\nBinaryReader.prototype.readFloat = _read(Buffer.prototype.readFloatLE, Buffer.prototype.readFloatBE, 4);\r\nBinaryReader.prototype.readDouble = _read(Buffer.prototype.readDoubleLE, Buffer.prototype.readDoubleBE, 8);\r\n\r\nBinaryReader.prototype.readVarInt = function () {\r\n    var nextByte,\r\n        result = 0,\r\n        bytesRead = 0;\r\n\r\n    do {\r\n        nextByte = this.buffer[this.position + bytesRead];\r\n        result += (nextByte & 0x7F) << (7 * bytesRead);\r\n        bytesRead++;\r\n    } while (nextByte >= 0x80);\r\n\r\n    this.position += bytesRead;\r\n\r\n    return result;\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uLi9ub2RlX21vZHVsZXMvd2t4L2xpYi9iaW5hcnlyZWFkZXIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xpZW50Ly4uL25vZGVfbW9kdWxlcy93a3gvbGliL2JpbmFyeXJlYWRlci5qcz9iNGMyIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gQmluYXJ5UmVhZGVyO1xyXG5cclxuZnVuY3Rpb24gQmluYXJ5UmVhZGVyKGJ1ZmZlciwgaXNCaWdFbmRpYW4pIHtcclxuICAgIHRoaXMuYnVmZmVyID0gYnVmZmVyO1xyXG4gICAgdGhpcy5wb3NpdGlvbiA9IDA7XHJcbiAgICB0aGlzLmlzQmlnRW5kaWFuID0gaXNCaWdFbmRpYW4gfHwgZmFsc2U7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIF9yZWFkKHJlYWRMRSwgcmVhZEJFLCBzaXplKSB7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciB2YWx1ZTtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuaXNCaWdFbmRpYW4pXHJcbiAgICAgICAgICAgIHZhbHVlID0gcmVhZEJFLmNhbGwodGhpcy5idWZmZXIsIHRoaXMucG9zaXRpb24pO1xyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgdmFsdWUgPSByZWFkTEUuY2FsbCh0aGlzLmJ1ZmZlciwgdGhpcy5wb3NpdGlvbik7XHJcblxyXG4gICAgICAgIHRoaXMucG9zaXRpb24gKz0gc2l6ZTtcclxuXHJcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xyXG4gICAgfTtcclxufVxyXG5cclxuQmluYXJ5UmVhZGVyLnByb3RvdHlwZS5yZWFkVUludDggPSBfcmVhZChCdWZmZXIucHJvdG90eXBlLnJlYWRVSW50OCwgQnVmZmVyLnByb3RvdHlwZS5yZWFkVUludDgsIDEpO1xyXG5CaW5hcnlSZWFkZXIucHJvdG90eXBlLnJlYWRVSW50MTYgPSBfcmVhZChCdWZmZXIucHJvdG90eXBlLnJlYWRVSW50MTZMRSwgQnVmZmVyLnByb3RvdHlwZS5yZWFkVUludDE2QkUsIDIpO1xyXG5CaW5hcnlSZWFkZXIucHJvdG90eXBlLnJlYWRVSW50MzIgPSBfcmVhZChCdWZmZXIucHJvdG90eXBlLnJlYWRVSW50MzJMRSwgQnVmZmVyLnByb3RvdHlwZS5yZWFkVUludDMyQkUsIDQpO1xyXG5CaW5hcnlSZWFkZXIucHJvdG90eXBlLnJlYWRJbnQ4ID0gX3JlYWQoQnVmZmVyLnByb3RvdHlwZS5yZWFkSW50OCwgQnVmZmVyLnByb3RvdHlwZS5yZWFkSW50OCwgMSk7XHJcbkJpbmFyeVJlYWRlci5wcm90b3R5cGUucmVhZEludDE2ID0gX3JlYWQoQnVmZmVyLnByb3RvdHlwZS5yZWFkSW50MTZMRSwgQnVmZmVyLnByb3RvdHlwZS5yZWFkSW50MTZCRSwgMik7XHJcbkJpbmFyeVJlYWRlci5wcm90b3R5cGUucmVhZEludDMyID0gX3JlYWQoQnVmZmVyLnByb3RvdHlwZS5yZWFkSW50MzJMRSwgQnVmZmVyLnByb3RvdHlwZS5yZWFkSW50MzJCRSwgNCk7XHJcbkJpbmFyeVJlYWRlci5wcm90b3R5cGUucmVhZEZsb2F0ID0gX3JlYWQoQnVmZmVyLnByb3RvdHlwZS5yZWFkRmxvYXRMRSwgQnVmZmVyLnByb3RvdHlwZS5yZWFkRmxvYXRCRSwgNCk7XHJcbkJpbmFyeVJlYWRlci5wcm90b3R5cGUucmVhZERvdWJsZSA9IF9yZWFkKEJ1ZmZlci5wcm90b3R5cGUucmVhZERvdWJsZUxFLCBCdWZmZXIucHJvdG90eXBlLnJlYWREb3VibGVCRSwgOCk7XHJcblxyXG5CaW5hcnlSZWFkZXIucHJvdG90eXBlLnJlYWRWYXJJbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgbmV4dEJ5dGUsXHJcbiAgICAgICAgcmVzdWx0ID0gMCxcclxuICAgICAgICBieXRlc1JlYWQgPSAwO1xyXG5cclxuICAgIGRvIHtcclxuICAgICAgICBuZXh0Qnl0ZSA9IHRoaXMuYnVmZmVyW3RoaXMucG9zaXRpb24gKyBieXRlc1JlYWRdO1xyXG4gICAgICAgIHJlc3VsdCArPSAobmV4dEJ5dGUgJiAweDdGKSA8PCAoNyAqIGJ5dGVzUmVhZCk7XHJcbiAgICAgICAgYnl0ZXNSZWFkKys7XHJcbiAgICB9IHdoaWxlIChuZXh0Qnl0ZSA+PSAweDgwKTtcclxuXHJcbiAgICB0aGlzLnBvc2l0aW9uICs9IGJ5dGVzUmVhZDtcclxuXHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG59O1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/../node_modules/wkx/lib/binaryreader.js\n");

/***/ }),

/***/ "(action-browser)/../node_modules/wkx/lib/binarywriter.js":
/*!***********************************************!*\
  !*** ../node_modules/wkx/lib/binarywriter.js ***!
  \***********************************************/
/***/ ((module) => {

eval("module.exports = BinaryWriter;\r\n\r\nfunction BinaryWriter(size, allowResize) {\r\n    this.buffer = new Buffer(size);\r\n    this.position = 0;\r\n    this.allowResize = allowResize;\r\n}\r\n\r\nfunction _write(write, size) {\r\n    return function (value, noAssert) {\r\n        this.ensureSize(size);\r\n\r\n        write.call(this.buffer, value, this.position, noAssert);\r\n        this.position += size;\r\n    };\r\n}\r\n\r\nBinaryWriter.prototype.writeUInt8 = _write(Buffer.prototype.writeUInt8, 1);\r\nBinaryWriter.prototype.writeUInt16LE = _write(Buffer.prototype.writeUInt16LE, 2);\r\nBinaryWriter.prototype.writeUInt16BE = _write(Buffer.prototype.writeUInt16BE, 2);\r\nBinaryWriter.prototype.writeUInt32LE = _write(Buffer.prototype.writeUInt32LE, 4);\r\nBinaryWriter.prototype.writeUInt32BE = _write(Buffer.prototype.writeUInt32BE, 4);\r\nBinaryWriter.prototype.writeInt8 = _write(Buffer.prototype.writeInt8, 1);\r\nBinaryWriter.prototype.writeInt16LE = _write(Buffer.prototype.writeInt16LE, 2);\r\nBinaryWriter.prototype.writeInt16BE = _write(Buffer.prototype.writeInt16BE, 2);\r\nBinaryWriter.prototype.writeInt32LE = _write(Buffer.prototype.writeInt32LE, 4);\r\nBinaryWriter.prototype.writeInt32BE = _write(Buffer.prototype.writeInt32BE, 4);\r\nBinaryWriter.prototype.writeFloatLE = _write(Buffer.prototype.writeFloatLE, 4);\r\nBinaryWriter.prototype.writeFloatBE = _write(Buffer.prototype.writeFloatBE, 4);\r\nBinaryWriter.prototype.writeDoubleLE = _write(Buffer.prototype.writeDoubleLE, 8);\r\nBinaryWriter.prototype.writeDoubleBE = _write(Buffer.prototype.writeDoubleBE, 8);\r\n\r\nBinaryWriter.prototype.writeBuffer = function (buffer) {\r\n    this.ensureSize(buffer.length);\r\n\r\n    buffer.copy(this.buffer, this.position, 0, buffer.length);\r\n    this.position += buffer.length;\r\n};\r\n\r\nBinaryWriter.prototype.writeVarInt = function (value) {\r\n    var length = 1;\r\n\r\n    while ((value & 0xFFFFFF80) !== 0) {\r\n        this.writeUInt8((value & 0x7F) | 0x80);\r\n        value >>>= 7;\r\n        length++;\r\n    }\r\n\r\n    this.writeUInt8(value & 0x7F);\r\n\r\n    return length;\r\n};\r\n\r\nBinaryWriter.prototype.ensureSize = function (size) {\r\n    if (this.buffer.length < this.position + size) {\r\n        if (this.allowResize) {\r\n            var tempBuffer = new Buffer(this.position + size);\r\n            this.buffer.copy(tempBuffer, 0, 0, this.buffer.length);\r\n            this.buffer = tempBuffer;\r\n        }\r\n        else {\r\n            throw new RangeError('index out of range');\r\n        }\r\n    }\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uLi9ub2RlX21vZHVsZXMvd2t4L2xpYi9iaW5hcnl3cml0ZXIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2NsaWVudC8uLi9ub2RlX21vZHVsZXMvd2t4L2xpYi9iaW5hcnl3cml0ZXIuanM/MjVhYSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IEJpbmFyeVdyaXRlcjtcclxuXHJcbmZ1bmN0aW9uIEJpbmFyeVdyaXRlcihzaXplLCBhbGxvd1Jlc2l6ZSkge1xyXG4gICAgdGhpcy5idWZmZXIgPSBuZXcgQnVmZmVyKHNpemUpO1xyXG4gICAgdGhpcy5wb3NpdGlvbiA9IDA7XHJcbiAgICB0aGlzLmFsbG93UmVzaXplID0gYWxsb3dSZXNpemU7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIF93cml0ZSh3cml0ZSwgc2l6ZSkge1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uICh2YWx1ZSwgbm9Bc3NlcnQpIHtcclxuICAgICAgICB0aGlzLmVuc3VyZVNpemUoc2l6ZSk7XHJcblxyXG4gICAgICAgIHdyaXRlLmNhbGwodGhpcy5idWZmZXIsIHZhbHVlLCB0aGlzLnBvc2l0aW9uLCBub0Fzc2VydCk7XHJcbiAgICAgICAgdGhpcy5wb3NpdGlvbiArPSBzaXplO1xyXG4gICAgfTtcclxufVxyXG5cclxuQmluYXJ5V3JpdGVyLnByb3RvdHlwZS53cml0ZVVJbnQ4ID0gX3dyaXRlKEJ1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50OCwgMSk7XHJcbkJpbmFyeVdyaXRlci5wcm90b3R5cGUud3JpdGVVSW50MTZMRSA9IF93cml0ZShCdWZmZXIucHJvdG90eXBlLndyaXRlVUludDE2TEUsIDIpO1xyXG5CaW5hcnlXcml0ZXIucHJvdG90eXBlLndyaXRlVUludDE2QkUgPSBfd3JpdGUoQnVmZmVyLnByb3RvdHlwZS53cml0ZVVJbnQxNkJFLCAyKTtcclxuQmluYXJ5V3JpdGVyLnByb3RvdHlwZS53cml0ZVVJbnQzMkxFID0gX3dyaXRlKEJ1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50MzJMRSwgNCk7XHJcbkJpbmFyeVdyaXRlci5wcm90b3R5cGUud3JpdGVVSW50MzJCRSA9IF93cml0ZShCdWZmZXIucHJvdG90eXBlLndyaXRlVUludDMyQkUsIDQpO1xyXG5CaW5hcnlXcml0ZXIucHJvdG90eXBlLndyaXRlSW50OCA9IF93cml0ZShCdWZmZXIucHJvdG90eXBlLndyaXRlSW50OCwgMSk7XHJcbkJpbmFyeVdyaXRlci5wcm90b3R5cGUud3JpdGVJbnQxNkxFID0gX3dyaXRlKEJ1ZmZlci5wcm90b3R5cGUud3JpdGVJbnQxNkxFLCAyKTtcclxuQmluYXJ5V3JpdGVyLnByb3RvdHlwZS53cml0ZUludDE2QkUgPSBfd3JpdGUoQnVmZmVyLnByb3RvdHlwZS53cml0ZUludDE2QkUsIDIpO1xyXG5CaW5hcnlXcml0ZXIucHJvdG90eXBlLndyaXRlSW50MzJMRSA9IF93cml0ZShCdWZmZXIucHJvdG90eXBlLndyaXRlSW50MzJMRSwgNCk7XHJcbkJpbmFyeVdyaXRlci5wcm90b3R5cGUud3JpdGVJbnQzMkJFID0gX3dyaXRlKEJ1ZmZlci5wcm90b3R5cGUud3JpdGVJbnQzMkJFLCA0KTtcclxuQmluYXJ5V3JpdGVyLnByb3RvdHlwZS53cml0ZUZsb2F0TEUgPSBfd3JpdGUoQnVmZmVyLnByb3RvdHlwZS53cml0ZUZsb2F0TEUsIDQpO1xyXG5CaW5hcnlXcml0ZXIucHJvdG90eXBlLndyaXRlRmxvYXRCRSA9IF93cml0ZShCdWZmZXIucHJvdG90eXBlLndyaXRlRmxvYXRCRSwgNCk7XHJcbkJpbmFyeVdyaXRlci5wcm90b3R5cGUud3JpdGVEb3VibGVMRSA9IF93cml0ZShCdWZmZXIucHJvdG90eXBlLndyaXRlRG91YmxlTEUsIDgpO1xyXG5CaW5hcnlXcml0ZXIucHJvdG90eXBlLndyaXRlRG91YmxlQkUgPSBfd3JpdGUoQnVmZmVyLnByb3RvdHlwZS53cml0ZURvdWJsZUJFLCA4KTtcclxuXHJcbkJpbmFyeVdyaXRlci5wcm90b3R5cGUud3JpdGVCdWZmZXIgPSBmdW5jdGlvbiAoYnVmZmVyKSB7XHJcbiAgICB0aGlzLmVuc3VyZVNpemUoYnVmZmVyLmxlbmd0aCk7XHJcblxyXG4gICAgYnVmZmVyLmNvcHkodGhpcy5idWZmZXIsIHRoaXMucG9zaXRpb24sIDAsIGJ1ZmZlci5sZW5ndGgpO1xyXG4gICAgdGhpcy5wb3NpdGlvbiArPSBidWZmZXIubGVuZ3RoO1xyXG59O1xyXG5cclxuQmluYXJ5V3JpdGVyLnByb3RvdHlwZS53cml0ZVZhckludCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgdmFyIGxlbmd0aCA9IDE7XHJcblxyXG4gICAgd2hpbGUgKCh2YWx1ZSAmIDB4RkZGRkZGODApICE9PSAwKSB7XHJcbiAgICAgICAgdGhpcy53cml0ZVVJbnQ4KCh2YWx1ZSAmIDB4N0YpIHwgMHg4MCk7XHJcbiAgICAgICAgdmFsdWUgPj4+PSA3O1xyXG4gICAgICAgIGxlbmd0aCsrO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMud3JpdGVVSW50OCh2YWx1ZSAmIDB4N0YpO1xyXG5cclxuICAgIHJldHVybiBsZW5ndGg7XHJcbn07XHJcblxyXG5CaW5hcnlXcml0ZXIucHJvdG90eXBlLmVuc3VyZVNpemUgPSBmdW5jdGlvbiAoc2l6ZSkge1xyXG4gICAgaWYgKHRoaXMuYnVmZmVyLmxlbmd0aCA8IHRoaXMucG9zaXRpb24gKyBzaXplKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuYWxsb3dSZXNpemUpIHtcclxuICAgICAgICAgICAgdmFyIHRlbXBCdWZmZXIgPSBuZXcgQnVmZmVyKHRoaXMucG9zaXRpb24gKyBzaXplKTtcclxuICAgICAgICAgICAgdGhpcy5idWZmZXIuY29weSh0ZW1wQnVmZmVyLCAwLCAwLCB0aGlzLmJ1ZmZlci5sZW5ndGgpO1xyXG4gICAgICAgICAgICB0aGlzLmJ1ZmZlciA9IHRlbXBCdWZmZXI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignaW5kZXggb3V0IG9mIHJhbmdlJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59O1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/../node_modules/wkx/lib/binarywriter.js\n");

/***/ }),

/***/ "(action-browser)/../node_modules/wkx/lib/geometry.js":
/*!*******************************************!*\
  !*** ../node_modules/wkx/lib/geometry.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = Geometry;\r\n\r\nvar Types = __webpack_require__(/*! ./types */ \"(action-browser)/../node_modules/wkx/lib/types.js\");\r\nvar Point = __webpack_require__(/*! ./point */ \"(action-browser)/../node_modules/wkx/lib/point.js\");\r\nvar LineString = __webpack_require__(/*! ./linestring */ \"(action-browser)/../node_modules/wkx/lib/linestring.js\");\r\nvar Polygon = __webpack_require__(/*! ./polygon */ \"(action-browser)/../node_modules/wkx/lib/polygon.js\");\r\nvar MultiPoint = __webpack_require__(/*! ./multipoint */ \"(action-browser)/../node_modules/wkx/lib/multipoint.js\");\r\nvar MultiLineString = __webpack_require__(/*! ./multilinestring */ \"(action-browser)/../node_modules/wkx/lib/multilinestring.js\");\r\nvar MultiPolygon = __webpack_require__(/*! ./multipolygon */ \"(action-browser)/../node_modules/wkx/lib/multipolygon.js\");\r\nvar GeometryCollection = __webpack_require__(/*! ./geometrycollection */ \"(action-browser)/../node_modules/wkx/lib/geometrycollection.js\");\r\nvar BinaryReader = __webpack_require__(/*! ./binaryreader */ \"(action-browser)/../node_modules/wkx/lib/binaryreader.js\");\r\nvar BinaryWriter = __webpack_require__(/*! ./binarywriter */ \"(action-browser)/../node_modules/wkx/lib/binarywriter.js\");\r\nvar WktParser = __webpack_require__(/*! ./wktparser */ \"(action-browser)/../node_modules/wkx/lib/wktparser.js\");\r\nvar ZigZag = __webpack_require__(/*! ./zigzag.js */ \"(action-browser)/../node_modules/wkx/lib/zigzag.js\");\r\n\r\nfunction Geometry() {\r\n    this.srid = undefined;\r\n    this.hasZ = false;\r\n    this.hasM = false;\r\n}\r\n\r\nGeometry.parse = function (value, options) {\r\n    var valueType = typeof value;\r\n\r\n    if (valueType === 'string' || value instanceof WktParser)\r\n        return Geometry._parseWkt(value);\r\n    else if (Buffer.isBuffer(value) || value instanceof BinaryReader)\r\n        return Geometry._parseWkb(value, options);\r\n    else\r\n        throw new Error('first argument must be a string or Buffer');\r\n};\r\n\r\nGeometry._parseWkt = function (value) {\r\n    var wktParser,\r\n        srid;\r\n\r\n    if (value instanceof WktParser)\r\n        wktParser = value;\r\n    else\r\n        wktParser = new WktParser(value);\r\n\r\n    var match = wktParser.matchRegex([/^SRID=(\\d+);/]);\r\n    if (match)\r\n        srid = parseInt(match[1], 10);\r\n\r\n    var geometryType = wktParser.matchType();\r\n    var dimension = wktParser.matchDimension();\r\n\r\n    var options = {\r\n        srid: srid,\r\n        hasZ: dimension.hasZ,\r\n        hasM: dimension.hasM\r\n    };\r\n\r\n    switch (geometryType) {\r\n        case Types.wkt.Point:\r\n            return Point._parseWkt(wktParser, options);\r\n        case Types.wkt.LineString:\r\n            return LineString._parseWkt(wktParser, options);\r\n        case Types.wkt.Polygon:\r\n            return Polygon._parseWkt(wktParser, options);\r\n        case Types.wkt.MultiPoint:\r\n            return MultiPoint._parseWkt(wktParser, options);\r\n        case Types.wkt.MultiLineString:\r\n            return MultiLineString._parseWkt(wktParser, options);\r\n        case Types.wkt.MultiPolygon:\r\n            return MultiPolygon._parseWkt(wktParser, options);\r\n        case Types.wkt.GeometryCollection:\r\n            return GeometryCollection._parseWkt(wktParser, options);\r\n    }\r\n};\r\n\r\nGeometry._parseWkb = function (value, parentOptions) {\r\n    var binaryReader,\r\n        wkbType,\r\n        geometryType,\r\n        options = {};\r\n\r\n    if (value instanceof BinaryReader)\r\n        binaryReader = value;\r\n    else\r\n        binaryReader = new BinaryReader(value);\r\n\r\n    binaryReader.isBigEndian = !binaryReader.readInt8();\r\n\r\n    wkbType = binaryReader.readUInt32();\r\n\r\n    options.hasSrid = (wkbType & 0x20000000) === 0x20000000;\r\n    options.isEwkb = (wkbType & 0x20000000) || (wkbType & 0x40000000) || (wkbType & 0x80000000);\r\n\r\n    if (options.hasSrid)\r\n        options.srid = binaryReader.readUInt32();\r\n\r\n    options.hasZ = false;\r\n    options.hasM = false;\r\n\r\n    if (!options.isEwkb && (!parentOptions || !parentOptions.isEwkb)) {\r\n        if (wkbType >= 1000 && wkbType < 2000) {\r\n            options.hasZ = true;\r\n            geometryType = wkbType - 1000;\r\n        }\r\n        else if (wkbType >= 2000 && wkbType < 3000) {\r\n            options.hasM = true;\r\n            geometryType = wkbType - 2000;\r\n        }\r\n        else if (wkbType >= 3000 && wkbType < 4000) {\r\n            options.hasZ = true;\r\n            options.hasM = true;\r\n            geometryType = wkbType - 3000;\r\n        }\r\n        else {\r\n            geometryType = wkbType;\r\n        }\r\n    }\r\n    else {\r\n        if (wkbType & 0x80000000)\r\n            options.hasZ = true;\r\n        if (wkbType & 0x40000000)\r\n            options.hasM = true;\r\n\r\n        geometryType = wkbType & 0xF;\r\n    }\r\n\r\n    switch (geometryType) {\r\n        case Types.wkb.Point:\r\n            return Point._parseWkb(binaryReader, options);\r\n        case Types.wkb.LineString:\r\n            return LineString._parseWkb(binaryReader, options);\r\n        case Types.wkb.Polygon:\r\n            return Polygon._parseWkb(binaryReader, options);\r\n        case Types.wkb.MultiPoint:\r\n            return MultiPoint._parseWkb(binaryReader, options);\r\n        case Types.wkb.MultiLineString:\r\n            return MultiLineString._parseWkb(binaryReader, options);\r\n        case Types.wkb.MultiPolygon:\r\n            return MultiPolygon._parseWkb(binaryReader, options);\r\n        case Types.wkb.GeometryCollection:\r\n            return GeometryCollection._parseWkb(binaryReader, options);\r\n        default:\r\n            throw new Error('GeometryType ' + geometryType + ' not supported');\r\n    }\r\n};\r\n\r\nGeometry.parseTwkb = function (value) {\r\n    var binaryReader,\r\n        options = {};\r\n\r\n    if (value instanceof BinaryReader)\r\n        binaryReader = value;\r\n    else\r\n        binaryReader = new BinaryReader(value);\r\n\r\n    var type = binaryReader.readUInt8();\r\n    var metadataHeader = binaryReader.readUInt8();\r\n\r\n    var geometryType = type & 0x0F;\r\n    options.precision = ZigZag.decode(type >> 4);\r\n    options.precisionFactor = Math.pow(10, options.precision);\r\n\r\n    options.hasBoundingBox = metadataHeader >> 0 & 1;\r\n    options.hasSizeAttribute = metadataHeader >> 1 & 1;\r\n    options.hasIdList = metadataHeader >> 2 & 1;\r\n    options.hasExtendedPrecision = metadataHeader >> 3 & 1;\r\n    options.isEmpty = metadataHeader >> 4 & 1;\r\n\r\n    if (options.hasExtendedPrecision) {\r\n        var extendedPrecision = binaryReader.readUInt8();\r\n        options.hasZ = (extendedPrecision & 0x01) === 0x01;\r\n        options.hasM = (extendedPrecision & 0x02) === 0x02;\r\n\r\n        options.zPrecision = ZigZag.decode((extendedPrecision & 0x1C) >> 2);\r\n        options.zPrecisionFactor = Math.pow(10, options.zPrecision);\r\n\r\n        options.mPrecision = ZigZag.decode((extendedPrecision & 0xE0) >> 5);\r\n        options.mPrecisionFactor = Math.pow(10, options.mPrecision);\r\n    }\r\n    else {\r\n        options.hasZ = false;\r\n        options.hasM = false;\r\n    }\r\n\r\n    if (options.hasSizeAttribute)\r\n        binaryReader.readVarInt();\r\n    if (options.hasBoundingBox) {\r\n        var dimensions = 2;\r\n\r\n        if (options.hasZ)\r\n            dimensions++;\r\n        if (options.hasM)\r\n            dimensions++;\r\n\r\n        for (var i = 0; i < dimensions; i++) {\r\n            binaryReader.readVarInt();\r\n            binaryReader.readVarInt();\r\n        }\r\n    }\r\n\r\n    switch (geometryType) {\r\n        case Types.wkb.Point:\r\n            return Point._parseTwkb(binaryReader, options);\r\n        case Types.wkb.LineString:\r\n            return LineString._parseTwkb(binaryReader, options);\r\n        case Types.wkb.Polygon:\r\n            return Polygon._parseTwkb(binaryReader, options);\r\n        case Types.wkb.MultiPoint:\r\n            return MultiPoint._parseTwkb(binaryReader, options);\r\n        case Types.wkb.MultiLineString:\r\n            return MultiLineString._parseTwkb(binaryReader, options);\r\n        case Types.wkb.MultiPolygon:\r\n            return MultiPolygon._parseTwkb(binaryReader, options);\r\n        case Types.wkb.GeometryCollection:\r\n            return GeometryCollection._parseTwkb(binaryReader, options);\r\n        default:\r\n            throw new Error('GeometryType ' + geometryType + ' not supported');\r\n    }\r\n};\r\n\r\nGeometry.parseGeoJSON = function (value) {\r\n    return Geometry._parseGeoJSON(value);\r\n};\r\n\r\nGeometry._parseGeoJSON = function (value, isSubGeometry) {\r\n    var geometry;\r\n\r\n    switch (value.type) {\r\n        case Types.geoJSON.Point:\r\n            geometry = Point._parseGeoJSON(value); break;\r\n        case Types.geoJSON.LineString:\r\n            geometry = LineString._parseGeoJSON(value); break;\r\n        case Types.geoJSON.Polygon:\r\n            geometry = Polygon._parseGeoJSON(value); break;\r\n        case Types.geoJSON.MultiPoint:\r\n            geometry = MultiPoint._parseGeoJSON(value); break;\r\n        case Types.geoJSON.MultiLineString:\r\n            geometry = MultiLineString._parseGeoJSON(value); break;\r\n        case Types.geoJSON.MultiPolygon:\r\n            geometry = MultiPolygon._parseGeoJSON(value); break;\r\n        case Types.geoJSON.GeometryCollection:\r\n            geometry = GeometryCollection._parseGeoJSON(value); break;\r\n        default:\r\n            throw new Error('GeometryType ' + value.type + ' not supported');\r\n    }\r\n\r\n    if (value.crs && value.crs.type && value.crs.type === 'name' && value.crs.properties && value.crs.properties.name) {\r\n        var crs = value.crs.properties.name;\r\n\r\n        if (crs.indexOf('EPSG:') === 0)\r\n            geometry.srid = parseInt(crs.substring(5));\r\n        else if (crs.indexOf('urn:ogc:def:crs:EPSG::') === 0)\r\n            geometry.srid = parseInt(crs.substring(22));\r\n        else\r\n            throw new Error('Unsupported crs: ' + crs);\r\n    }\r\n    else if (!isSubGeometry) {\r\n        geometry.srid = 4326;\r\n    }\r\n\r\n    return geometry;\r\n};\r\n\r\nGeometry.prototype.toEwkt = function () {\r\n    return 'SRID=' + this.srid + ';' + this.toWkt();\r\n};\r\n\r\nGeometry.prototype.toEwkb = function () {\r\n    var ewkb = new BinaryWriter(this._getWkbSize() + 4);\r\n    var wkb = this.toWkb();\r\n\r\n    ewkb.writeInt8(1);\r\n    ewkb.writeUInt32LE((wkb.slice(1, 5).readUInt32LE(0) | 0x20000000) >>> 0, true);\r\n    ewkb.writeUInt32LE(this.srid);\r\n\r\n    ewkb.writeBuffer(wkb.slice(5));\r\n\r\n    return ewkb.buffer;\r\n};\r\n\r\nGeometry.prototype._getWktType = function (wktType, isEmpty) {\r\n    var wkt = wktType;\r\n\r\n    if (this.hasZ && this.hasM)\r\n        wkt += ' ZM ';\r\n    else if (this.hasZ)\r\n        wkt += ' Z ';\r\n    else if (this.hasM)\r\n        wkt += ' M ';\r\n\r\n    if (isEmpty && !this.hasZ && !this.hasM)\r\n        wkt += ' ';\r\n\r\n    if (isEmpty)\r\n        wkt += 'EMPTY';\r\n\r\n    return wkt;\r\n};\r\n\r\nGeometry.prototype._getWktCoordinate = function (point) {\r\n    var coordinates = point.x + ' ' + point.y;\r\n\r\n    if (this.hasZ)\r\n        coordinates += ' ' + point.z;\r\n    if (this.hasM)\r\n        coordinates += ' ' + point.m;\r\n\r\n    return coordinates;\r\n};\r\n\r\nGeometry.prototype._writeWkbType = function (wkb, geometryType, parentOptions) {\r\n    var dimensionType = 0;\r\n\r\n    if (typeof this.srid === 'undefined' && (!parentOptions || typeof parentOptions.srid === 'undefined')) {\r\n        if (this.hasZ && this.hasM)\r\n            dimensionType += 3000;\r\n        else if (this.hasZ)\r\n            dimensionType += 1000;\r\n        else if (this.hasM)\r\n            dimensionType += 2000;\r\n    }\r\n    else {\r\n        if (this.hasZ)\r\n            dimensionType |= 0x80000000;\r\n        if (this.hasM)\r\n            dimensionType |= 0x40000000;\r\n    }\r\n\r\n    wkb.writeUInt32LE((dimensionType + geometryType) >>> 0, true);\r\n};\r\n\r\nGeometry.getTwkbPrecision = function (xyPrecision, zPrecision, mPrecision) {\r\n    return {\r\n        xy: xyPrecision,\r\n        z: zPrecision,\r\n        m: mPrecision,\r\n        xyFactor: Math.pow(10, xyPrecision),\r\n        zFactor: Math.pow(10, zPrecision),\r\n        mFactor: Math.pow(10, mPrecision)\r\n    };\r\n};\r\n\r\nGeometry.prototype._writeTwkbHeader = function (twkb, geometryType, precision, isEmpty) {\r\n    var type = (ZigZag.encode(precision.xy) << 4) + geometryType;\r\n    var metadataHeader = (this.hasZ || this.hasM) << 3;\r\n    metadataHeader += isEmpty << 4;\r\n\r\n    twkb.writeUInt8(type);\r\n    twkb.writeUInt8(metadataHeader);\r\n\r\n    if (this.hasZ || this.hasM) {\r\n        var extendedPrecision = 0;\r\n        if (this.hasZ)\r\n            extendedPrecision |= 0x1;\r\n        if (this.hasM)\r\n            extendedPrecision |= 0x2;\r\n\r\n        twkb.writeUInt8(extendedPrecision);\r\n    }\r\n};\r\n\r\nGeometry.prototype.toGeoJSON = function (options) {\r\n    var geoJSON = {};\r\n\r\n    if (this.srid) {\r\n        if (options) {\r\n            if (options.shortCrs) {\r\n                geoJSON.crs = {\r\n                    type: 'name',\r\n                    properties: {\r\n                        name: 'EPSG:' + this.srid\r\n                    }\r\n                };\r\n            }\r\n            else if (options.longCrs) {\r\n                geoJSON.crs = {\r\n                    type: 'name',\r\n                    properties: {\r\n                        name: 'urn:ogc:def:crs:EPSG::' + this.srid\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    return geoJSON;\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/../node_modules/wkx/lib/geometry.js\n");

/***/ }),

/***/ "(action-browser)/../node_modules/wkx/lib/geometrycollection.js":
/*!*****************************************************!*\
  !*** ../node_modules/wkx/lib/geometrycollection.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = GeometryCollection;\r\n\r\nvar util = __webpack_require__(/*! util */ \"util\");\r\n\r\nvar Types = __webpack_require__(/*! ./types */ \"(action-browser)/../node_modules/wkx/lib/types.js\");\r\nvar Geometry = __webpack_require__(/*! ./geometry */ \"(action-browser)/../node_modules/wkx/lib/geometry.js\");\r\nvar BinaryWriter = __webpack_require__(/*! ./binarywriter */ \"(action-browser)/../node_modules/wkx/lib/binarywriter.js\");\r\n\r\nfunction GeometryCollection(geometries, srid) {\r\n    Geometry.call(this);\r\n\r\n    this.geometries = geometries || [];\r\n\tthis.srid = srid;\r\n\r\n    if (this.geometries.length > 0) {\r\n        this.hasZ = this.geometries[0].hasZ;\r\n        this.hasM = this.geometries[0].hasM;\r\n    }\r\n}\r\n\r\nutil.inherits(GeometryCollection, Geometry);\r\n\r\nGeometryCollection.Z = function (geometries, srid) {\r\n    var geometryCollection = new GeometryCollection(geometries, srid);\r\n    geometryCollection.hasZ = true;\r\n    return geometryCollection;\r\n};\r\n\r\nGeometryCollection.M = function (geometries, srid) {\r\n    var geometryCollection = new GeometryCollection(geometries, srid);\r\n    geometryCollection.hasM = true;\r\n    return geometryCollection;\r\n};\r\n\r\nGeometryCollection.ZM = function (geometries, srid) {\r\n    var geometryCollection = new GeometryCollection(geometries, srid);\r\n    geometryCollection.hasZ = true;\r\n    geometryCollection.hasM = true;\r\n    return geometryCollection;\r\n};\r\n\r\nGeometryCollection._parseWkt = function (value, options) {\r\n    var geometryCollection = new GeometryCollection();\r\n    geometryCollection.srid = options.srid;\r\n    geometryCollection.hasZ = options.hasZ;\r\n    geometryCollection.hasM = options.hasM;\r\n\r\n    if (value.isMatch(['EMPTY']))\r\n        return geometryCollection;\r\n\r\n    value.expectGroupStart();\r\n\r\n    do {\r\n        geometryCollection.geometries.push(Geometry.parse(value));\r\n    } while (value.isMatch([',']));\r\n\r\n    value.expectGroupEnd();\r\n\r\n    return geometryCollection;\r\n};\r\n\r\nGeometryCollection._parseWkb = function (value, options) {\r\n    var geometryCollection = new GeometryCollection();\r\n    geometryCollection.srid = options.srid;\r\n    geometryCollection.hasZ = options.hasZ;\r\n    geometryCollection.hasM = options.hasM;\r\n\r\n    var geometryCount = value.readUInt32();\r\n\r\n    for (var i = 0; i < geometryCount; i++)\r\n        geometryCollection.geometries.push(Geometry.parse(value, options));\r\n\r\n    return geometryCollection;\r\n};\r\n\r\nGeometryCollection._parseTwkb = function (value, options) {\r\n    var geometryCollection = new GeometryCollection();\r\n    geometryCollection.hasZ = options.hasZ;\r\n    geometryCollection.hasM = options.hasM;\r\n\r\n    if (options.isEmpty)\r\n        return geometryCollection;\r\n\r\n    var geometryCount = value.readVarInt();\r\n\r\n    for (var i = 0; i < geometryCount; i++)\r\n        geometryCollection.geometries.push(Geometry.parseTwkb(value));\r\n\r\n    return geometryCollection;\r\n};\r\n\r\nGeometryCollection._parseGeoJSON = function (value) {\r\n    var geometryCollection = new GeometryCollection();\r\n\r\n    for (var i = 0; i < value.geometries.length; i++)\r\n        geometryCollection.geometries.push(Geometry._parseGeoJSON(value.geometries[i], true));\r\n\r\n    if (geometryCollection.geometries.length > 0)\r\n        geometryCollection.hasZ = geometryCollection.geometries[0].hasZ;\r\n\r\n    return geometryCollection;\r\n};\r\n\r\nGeometryCollection.prototype.toWkt = function () {\r\n    if (this.geometries.length === 0)\r\n        return this._getWktType(Types.wkt.GeometryCollection, true);\r\n\r\n    var wkt = this._getWktType(Types.wkt.GeometryCollection, false) + '(';\r\n\r\n    for (var i = 0; i < this.geometries.length; i++)\r\n        wkt += this.geometries[i].toWkt() + ',';\r\n\r\n    wkt = wkt.slice(0, -1);\r\n    wkt += ')';\r\n\r\n    return wkt;\r\n};\r\n\r\nGeometryCollection.prototype.toWkb = function () {\r\n    var wkb = new BinaryWriter(this._getWkbSize());\r\n\r\n    wkb.writeInt8(1);\r\n\r\n    this._writeWkbType(wkb, Types.wkb.GeometryCollection);\r\n    wkb.writeUInt32LE(this.geometries.length);\r\n\r\n    for (var i = 0; i < this.geometries.length; i++)\r\n        wkb.writeBuffer(this.geometries[i].toWkb({ srid: this.srid }));\r\n\r\n    return wkb.buffer;\r\n};\r\n\r\nGeometryCollection.prototype.toTwkb = function () {\r\n    var twkb = new BinaryWriter(0, true);\r\n\r\n    var precision = Geometry.getTwkbPrecision(5, 0, 0);\r\n    var isEmpty = this.geometries.length === 0;\r\n\r\n    this._writeTwkbHeader(twkb, Types.wkb.GeometryCollection, precision, isEmpty);\r\n\r\n    if (this.geometries.length > 0) {\r\n        twkb.writeVarInt(this.geometries.length);\r\n\r\n        for (var i = 0; i < this.geometries.length; i++)\r\n            twkb.writeBuffer(this.geometries[i].toTwkb());\r\n    }\r\n\r\n    return twkb.buffer;\r\n};\r\n\r\nGeometryCollection.prototype._getWkbSize = function () {\r\n    var size = 1 + 4 + 4;\r\n\r\n    for (var i = 0; i < this.geometries.length; i++)\r\n        size += this.geometries[i]._getWkbSize();\r\n\r\n    return size;\r\n};\r\n\r\nGeometryCollection.prototype.toGeoJSON = function (options) {\r\n    var geoJSON = Geometry.prototype.toGeoJSON.call(this, options);\r\n    geoJSON.type = Types.geoJSON.GeometryCollection;\r\n    geoJSON.geometries = [];\r\n\r\n    for (var i = 0; i < this.geometries.length; i++)\r\n        geoJSON.geometries.push(this.geometries[i].toGeoJSON());\r\n\r\n    return geoJSON;\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/../node_modules/wkx/lib/geometrycollection.js\n");

/***/ }),

/***/ "(action-browser)/../node_modules/wkx/lib/linestring.js":
/*!*********************************************!*\
  !*** ../node_modules/wkx/lib/linestring.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = LineString;\r\n\r\nvar util = __webpack_require__(/*! util */ \"util\");\r\n\r\nvar Geometry = __webpack_require__(/*! ./geometry */ \"(action-browser)/../node_modules/wkx/lib/geometry.js\");\r\nvar Types = __webpack_require__(/*! ./types */ \"(action-browser)/../node_modules/wkx/lib/types.js\");\r\nvar Point = __webpack_require__(/*! ./point */ \"(action-browser)/../node_modules/wkx/lib/point.js\");\r\nvar BinaryWriter = __webpack_require__(/*! ./binarywriter */ \"(action-browser)/../node_modules/wkx/lib/binarywriter.js\");\r\n\r\nfunction LineString(points, srid) {\r\n    Geometry.call(this);\r\n\r\n    this.points = points || [];\r\n\tthis.srid = srid;\r\n\r\n    if (this.points.length > 0) {\r\n        this.hasZ = this.points[0].hasZ;\r\n        this.hasM = this.points[0].hasM;\r\n    }\r\n}\r\n\r\nutil.inherits(LineString, Geometry);\r\n\r\nLineString.Z = function (points, srid) {\r\n    var lineString = new LineString(points, srid);\r\n    lineString.hasZ = true;\r\n    return lineString;\r\n};\r\n\r\nLineString.M = function (points, srid) {\r\n    var lineString = new LineString(points, srid);\r\n    lineString.hasM = true;\r\n    return lineString;\r\n};\r\n\r\nLineString.ZM = function (points, srid) {\r\n    var lineString = new LineString(points, srid);\r\n    lineString.hasZ = true;\r\n    lineString.hasM = true;\r\n    return lineString;\r\n};\r\n\r\nLineString._parseWkt = function (value, options) {\r\n    var lineString = new LineString();\r\n    lineString.srid = options.srid;\r\n    lineString.hasZ = options.hasZ;\r\n    lineString.hasM = options.hasM;\r\n\r\n    if (value.isMatch(['EMPTY']))\r\n        return lineString;\r\n\r\n    value.expectGroupStart();\r\n    lineString.points.push.apply(lineString.points, value.matchCoordinates(options));\r\n    value.expectGroupEnd();\r\n\r\n    return lineString;\r\n};\r\n\r\nLineString._parseWkb = function (value, options) {\r\n    var lineString = new LineString();\r\n    lineString.srid = options.srid;\r\n    lineString.hasZ = options.hasZ;\r\n    lineString.hasM = options.hasM;\r\n\r\n    var pointCount = value.readUInt32();\r\n\r\n    for (var i = 0; i < pointCount; i++)\r\n        lineString.points.push(Point._readWkbPoint(value, options));\r\n\r\n    return lineString;\r\n};\r\n\r\nLineString._parseTwkb = function (value, options) {\r\n    var lineString = new LineString();\r\n    lineString.hasZ = options.hasZ;\r\n    lineString.hasM = options.hasM;\r\n\r\n    if (options.isEmpty)\r\n        return lineString;\r\n\r\n    var previousPoint = new Point(0, 0, options.hasZ ? 0 : undefined, options.hasM ? 0 : undefined);\r\n    var pointCount = value.readVarInt();\r\n\r\n    for (var i = 0; i < pointCount; i++)\r\n        lineString.points.push(Point._readTwkbPoint(value, options, previousPoint));\r\n\r\n    return lineString;\r\n};\r\n\r\nLineString._parseGeoJSON = function (value) {\r\n    var lineString = new LineString();\r\n\r\n    if (value.coordinates.length > 0)\r\n        lineString.hasZ = value.coordinates[0].length > 2;\r\n\r\n    for (var i = 0; i < value.coordinates.length; i++)\r\n        lineString.points.push(Point._readGeoJSONPoint(value.coordinates[i]));\r\n\r\n    return lineString;\r\n};\r\n\r\nLineString.prototype.toWkt = function () {\r\n    if (this.points.length === 0)\r\n        return this._getWktType(Types.wkt.LineString, true);\r\n\r\n    return this._getWktType(Types.wkt.LineString, false) + this._toInnerWkt();\r\n};\r\n\r\nLineString.prototype._toInnerWkt = function () {\r\n    var innerWkt = '(';\r\n\r\n    for (var i = 0; i < this.points.length; i++)\r\n        innerWkt += this._getWktCoordinate(this.points[i]) + ',';\r\n\r\n    innerWkt = innerWkt.slice(0, -1);\r\n    innerWkt += ')';\r\n\r\n    return innerWkt;\r\n};\r\n\r\nLineString.prototype.toWkb = function (parentOptions) {\r\n    var wkb = new BinaryWriter(this._getWkbSize());\r\n\r\n    wkb.writeInt8(1);\r\n\r\n    this._writeWkbType(wkb, Types.wkb.LineString, parentOptions);\r\n    wkb.writeUInt32LE(this.points.length);\r\n\r\n    for (var i = 0; i < this.points.length; i++)\r\n        this.points[i]._writeWkbPoint(wkb);\r\n\r\n    return wkb.buffer;\r\n};\r\n\r\nLineString.prototype.toTwkb = function () {\r\n    var twkb = new BinaryWriter(0, true);\r\n\r\n    var precision = Geometry.getTwkbPrecision(5, 0, 0);\r\n    var isEmpty = this.points.length === 0;\r\n\r\n    this._writeTwkbHeader(twkb, Types.wkb.LineString, precision, isEmpty);\r\n\r\n    if (this.points.length > 0) {\r\n        twkb.writeVarInt(this.points.length);\r\n\r\n        var previousPoint = new Point(0, 0, 0, 0);\r\n        for (var i = 0; i < this.points.length; i++)\r\n            this.points[i]._writeTwkbPoint(twkb, precision, previousPoint);\r\n    }\r\n\r\n    return twkb.buffer;\r\n};\r\n\r\nLineString.prototype._getWkbSize = function () {\r\n    var coordinateSize = 16;\r\n\r\n    if (this.hasZ)\r\n        coordinateSize += 8;\r\n    if (this.hasM)\r\n        coordinateSize += 8;\r\n\r\n    return 1 + 4 + 4 + (this.points.length * coordinateSize);\r\n};\r\n\r\nLineString.prototype.toGeoJSON = function (options) {\r\n    var geoJSON = Geometry.prototype.toGeoJSON.call(this, options);\r\n    geoJSON.type = Types.geoJSON.LineString;\r\n    geoJSON.coordinates = [];\r\n\r\n    for (var i = 0; i < this.points.length; i++) {\r\n        if (this.hasZ)\r\n            geoJSON.coordinates.push([this.points[i].x, this.points[i].y, this.points[i].z]);\r\n        else\r\n            geoJSON.coordinates.push([this.points[i].x, this.points[i].y]);\r\n    }\r\n\r\n    return geoJSON;\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/../node_modules/wkx/lib/linestring.js\n");

/***/ }),

/***/ "(action-browser)/../node_modules/wkx/lib/multilinestring.js":
/*!**************************************************!*\
  !*** ../node_modules/wkx/lib/multilinestring.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = MultiLineString;\r\n\r\nvar util = __webpack_require__(/*! util */ \"util\");\r\n\r\nvar Types = __webpack_require__(/*! ./types */ \"(action-browser)/../node_modules/wkx/lib/types.js\");\r\nvar Geometry = __webpack_require__(/*! ./geometry */ \"(action-browser)/../node_modules/wkx/lib/geometry.js\");\r\nvar Point = __webpack_require__(/*! ./point */ \"(action-browser)/../node_modules/wkx/lib/point.js\");\r\nvar LineString = __webpack_require__(/*! ./linestring */ \"(action-browser)/../node_modules/wkx/lib/linestring.js\");\r\nvar BinaryWriter = __webpack_require__(/*! ./binarywriter */ \"(action-browser)/../node_modules/wkx/lib/binarywriter.js\");\r\n\r\nfunction MultiLineString(lineStrings, srid) {\r\n    Geometry.call(this);\r\n\r\n    this.lineStrings = lineStrings || [];\r\n\tthis.srid = srid;\r\n\r\n    if (this.lineStrings.length > 0) {\r\n        this.hasZ = this.lineStrings[0].hasZ;\r\n        this.hasM = this.lineStrings[0].hasM;\r\n    }\r\n}\r\n\r\nutil.inherits(MultiLineString, Geometry);\r\n\r\nMultiLineString.Z = function (lineStrings, srid) {\r\n    var multiLineString = new MultiLineString(lineStrings, srid);\r\n    multiLineString.hasZ = true;\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString.M = function (lineStrings, srid) {\r\n    var multiLineString = new MultiLineString(lineStrings, srid);\r\n    multiLineString.hasM = true;\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString.ZM = function (lineStrings, srid) {\r\n    var multiLineString = new MultiLineString(lineStrings, srid);\r\n    multiLineString.hasZ = true;\r\n    multiLineString.hasM = true;\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString._parseWkt = function (value, options) {\r\n    var multiLineString = new MultiLineString();\r\n    multiLineString.srid = options.srid;\r\n    multiLineString.hasZ = options.hasZ;\r\n    multiLineString.hasM = options.hasM;\r\n\r\n    if (value.isMatch(['EMPTY']))\r\n        return multiLineString;\r\n\r\n    value.expectGroupStart();\r\n\r\n    do {\r\n        value.expectGroupStart();\r\n        multiLineString.lineStrings.push(new LineString(value.matchCoordinates(options)));\r\n        value.expectGroupEnd();\r\n    } while (value.isMatch([',']));\r\n\r\n    value.expectGroupEnd();\r\n\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString._parseWkb = function (value, options) {\r\n    var multiLineString = new MultiLineString();\r\n    multiLineString.srid = options.srid;\r\n    multiLineString.hasZ = options.hasZ;\r\n    multiLineString.hasM = options.hasM;\r\n\r\n    var lineStringCount = value.readUInt32();\r\n\r\n    for (var i = 0; i < lineStringCount; i++)\r\n        multiLineString.lineStrings.push(Geometry.parse(value, options));\r\n\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString._parseTwkb = function (value, options) {\r\n    var multiLineString = new MultiLineString();\r\n    multiLineString.hasZ = options.hasZ;\r\n    multiLineString.hasM = options.hasM;\r\n\r\n    if (options.isEmpty)\r\n        return multiLineString;\r\n\r\n    var previousPoint = new Point(0, 0, options.hasZ ? 0 : undefined, options.hasM ? 0 : undefined);\r\n    var lineStringCount = value.readVarInt();\r\n\r\n    for (var i = 0; i < lineStringCount; i++) {\r\n        var lineString = new LineString();\r\n        lineString.hasZ = options.hasZ;\r\n        lineString.hasM = options.hasM;\r\n\r\n        var pointCount = value.readVarInt();\r\n\r\n        for (var j = 0; j < pointCount; j++)\r\n            lineString.points.push(Point._readTwkbPoint(value, options, previousPoint));\r\n\r\n        multiLineString.lineStrings.push(lineString);\r\n    }\r\n\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString._parseGeoJSON = function (value) {\r\n    var multiLineString = new MultiLineString();\r\n\r\n    if (value.coordinates.length > 0 && value.coordinates[0].length > 0)\r\n        multiLineString.hasZ = value.coordinates[0][0].length > 2;\r\n\r\n    for (var i = 0; i < value.coordinates.length; i++)\r\n        multiLineString.lineStrings.push(LineString._parseGeoJSON({ coordinates: value.coordinates[i] }));\r\n\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString.prototype.toWkt = function () {\r\n    if (this.lineStrings.length === 0)\r\n        return this._getWktType(Types.wkt.MultiLineString, true);\r\n\r\n    var wkt = this._getWktType(Types.wkt.MultiLineString, false) + '(';\r\n\r\n    for (var i = 0; i < this.lineStrings.length; i++)\r\n        wkt += this.lineStrings[i]._toInnerWkt() + ',';\r\n\r\n    wkt = wkt.slice(0, -1);\r\n    wkt += ')';\r\n\r\n    return wkt;\r\n};\r\n\r\nMultiLineString.prototype.toWkb = function () {\r\n    var wkb = new BinaryWriter(this._getWkbSize());\r\n\r\n    wkb.writeInt8(1);\r\n\r\n    this._writeWkbType(wkb, Types.wkb.MultiLineString);\r\n    wkb.writeUInt32LE(this.lineStrings.length);\r\n\r\n    for (var i = 0; i < this.lineStrings.length; i++)\r\n        wkb.writeBuffer(this.lineStrings[i].toWkb({ srid: this.srid }));\r\n\r\n    return wkb.buffer;\r\n};\r\n\r\nMultiLineString.prototype.toTwkb = function () {\r\n    var twkb = new BinaryWriter(0, true);\r\n\r\n    var precision = Geometry.getTwkbPrecision(5, 0, 0);\r\n    var isEmpty = this.lineStrings.length === 0;\r\n\r\n    this._writeTwkbHeader(twkb, Types.wkb.MultiLineString, precision, isEmpty);\r\n\r\n    if (this.lineStrings.length > 0) {\r\n        twkb.writeVarInt(this.lineStrings.length);\r\n\r\n        var previousPoint = new Point(0, 0, 0, 0);\r\n        for (var i = 0; i < this.lineStrings.length; i++) {\r\n            twkb.writeVarInt(this.lineStrings[i].points.length);\r\n\r\n            for (var j = 0; j < this.lineStrings[i].points.length; j++)\r\n                this.lineStrings[i].points[j]._writeTwkbPoint(twkb, precision, previousPoint);\r\n        }\r\n    }\r\n\r\n    return twkb.buffer;\r\n};\r\n\r\nMultiLineString.prototype._getWkbSize = function () {\r\n    var size = 1 + 4 + 4;\r\n\r\n    for (var i = 0; i < this.lineStrings.length; i++)\r\n        size += this.lineStrings[i]._getWkbSize();\r\n\r\n    return size;\r\n};\r\n\r\nMultiLineString.prototype.toGeoJSON = function (options) {\r\n    var geoJSON = Geometry.prototype.toGeoJSON.call(this, options);\r\n    geoJSON.type = Types.geoJSON.MultiLineString;\r\n    geoJSON.coordinates = [];\r\n\r\n    for (var i = 0; i < this.lineStrings.length; i++)\r\n        geoJSON.coordinates.push(this.lineStrings[i].toGeoJSON().coordinates);\r\n\r\n    return geoJSON;\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uLi9ub2RlX21vZHVsZXMvd2t4L2xpYi9tdWx0aWxpbmVzdHJpbmcuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBLFdBQVcsbUJBQU8sQ0FBQyxrQkFBTTtBQUN6QjtBQUNBLFlBQVksbUJBQU8sQ0FBQyxrRUFBUztBQUM3QixlQUFlLG1CQUFPLENBQUMsd0VBQVk7QUFDbkMsWUFBWSxtQkFBTyxDQUFDLGtFQUFTO0FBQzdCLGlCQUFpQixtQkFBTyxDQUFDLDRFQUFjO0FBQ3ZDLG1CQUFtQixtQkFBTyxDQUFDLGdGQUFnQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHFCQUFxQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixxQkFBcUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdCQUFnQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDhCQUE4QjtBQUNsRCxvRUFBb0UsbUNBQW1DO0FBQ3ZHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDZCQUE2QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw2QkFBNkI7QUFDakQsb0RBQW9ELGlCQUFpQjtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qiw2QkFBNkI7QUFDckQ7QUFDQTtBQUNBLDRCQUE0Qix1Q0FBdUM7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsNkJBQTZCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDZCQUE2QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2NsaWVudC8uLi9ub2RlX21vZHVsZXMvd2t4L2xpYi9tdWx0aWxpbmVzdHJpbmcuanM/Y2I2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IE11bHRpTGluZVN0cmluZztcclxuXHJcbnZhciB1dGlsID0gcmVxdWlyZSgndXRpbCcpO1xyXG5cclxudmFyIFR5cGVzID0gcmVxdWlyZSgnLi90eXBlcycpO1xyXG52YXIgR2VvbWV0cnkgPSByZXF1aXJlKCcuL2dlb21ldHJ5Jyk7XHJcbnZhciBQb2ludCA9IHJlcXVpcmUoJy4vcG9pbnQnKTtcclxudmFyIExpbmVTdHJpbmcgPSByZXF1aXJlKCcuL2xpbmVzdHJpbmcnKTtcclxudmFyIEJpbmFyeVdyaXRlciA9IHJlcXVpcmUoJy4vYmluYXJ5d3JpdGVyJyk7XHJcblxyXG5mdW5jdGlvbiBNdWx0aUxpbmVTdHJpbmcobGluZVN0cmluZ3MsIHNyaWQpIHtcclxuICAgIEdlb21ldHJ5LmNhbGwodGhpcyk7XHJcblxyXG4gICAgdGhpcy5saW5lU3RyaW5ncyA9IGxpbmVTdHJpbmdzIHx8IFtdO1xyXG5cdHRoaXMuc3JpZCA9IHNyaWQ7XHJcblxyXG4gICAgaWYgKHRoaXMubGluZVN0cmluZ3MubGVuZ3RoID4gMCkge1xyXG4gICAgICAgIHRoaXMuaGFzWiA9IHRoaXMubGluZVN0cmluZ3NbMF0uaGFzWjtcclxuICAgICAgICB0aGlzLmhhc00gPSB0aGlzLmxpbmVTdHJpbmdzWzBdLmhhc007XHJcbiAgICB9XHJcbn1cclxuXHJcbnV0aWwuaW5oZXJpdHMoTXVsdGlMaW5lU3RyaW5nLCBHZW9tZXRyeSk7XHJcblxyXG5NdWx0aUxpbmVTdHJpbmcuWiA9IGZ1bmN0aW9uIChsaW5lU3RyaW5ncywgc3JpZCkge1xyXG4gICAgdmFyIG11bHRpTGluZVN0cmluZyA9IG5ldyBNdWx0aUxpbmVTdHJpbmcobGluZVN0cmluZ3MsIHNyaWQpO1xyXG4gICAgbXVsdGlMaW5lU3RyaW5nLmhhc1ogPSB0cnVlO1xyXG4gICAgcmV0dXJuIG11bHRpTGluZVN0cmluZztcclxufTtcclxuXHJcbk11bHRpTGluZVN0cmluZy5NID0gZnVuY3Rpb24gKGxpbmVTdHJpbmdzLCBzcmlkKSB7XHJcbiAgICB2YXIgbXVsdGlMaW5lU3RyaW5nID0gbmV3IE11bHRpTGluZVN0cmluZyhsaW5lU3RyaW5ncywgc3JpZCk7XHJcbiAgICBtdWx0aUxpbmVTdHJpbmcuaGFzTSA9IHRydWU7XHJcbiAgICByZXR1cm4gbXVsdGlMaW5lU3RyaW5nO1xyXG59O1xyXG5cclxuTXVsdGlMaW5lU3RyaW5nLlpNID0gZnVuY3Rpb24gKGxpbmVTdHJpbmdzLCBzcmlkKSB7XHJcbiAgICB2YXIgbXVsdGlMaW5lU3RyaW5nID0gbmV3IE11bHRpTGluZVN0cmluZyhsaW5lU3RyaW5ncywgc3JpZCk7XHJcbiAgICBtdWx0aUxpbmVTdHJpbmcuaGFzWiA9IHRydWU7XHJcbiAgICBtdWx0aUxpbmVTdHJpbmcuaGFzTSA9IHRydWU7XHJcbiAgICByZXR1cm4gbXVsdGlMaW5lU3RyaW5nO1xyXG59O1xyXG5cclxuTXVsdGlMaW5lU3RyaW5nLl9wYXJzZVdrdCA9IGZ1bmN0aW9uICh2YWx1ZSwgb3B0aW9ucykge1xyXG4gICAgdmFyIG11bHRpTGluZVN0cmluZyA9IG5ldyBNdWx0aUxpbmVTdHJpbmcoKTtcclxuICAgIG11bHRpTGluZVN0cmluZy5zcmlkID0gb3B0aW9ucy5zcmlkO1xyXG4gICAgbXVsdGlMaW5lU3RyaW5nLmhhc1ogPSBvcHRpb25zLmhhc1o7XHJcbiAgICBtdWx0aUxpbmVTdHJpbmcuaGFzTSA9IG9wdGlvbnMuaGFzTTtcclxuXHJcbiAgICBpZiAodmFsdWUuaXNNYXRjaChbJ0VNUFRZJ10pKVxyXG4gICAgICAgIHJldHVybiBtdWx0aUxpbmVTdHJpbmc7XHJcblxyXG4gICAgdmFsdWUuZXhwZWN0R3JvdXBTdGFydCgpO1xyXG5cclxuICAgIGRvIHtcclxuICAgICAgICB2YWx1ZS5leHBlY3RHcm91cFN0YXJ0KCk7XHJcbiAgICAgICAgbXVsdGlMaW5lU3RyaW5nLmxpbmVTdHJpbmdzLnB1c2gobmV3IExpbmVTdHJpbmcodmFsdWUubWF0Y2hDb29yZGluYXRlcyhvcHRpb25zKSkpO1xyXG4gICAgICAgIHZhbHVlLmV4cGVjdEdyb3VwRW5kKCk7XHJcbiAgICB9IHdoaWxlICh2YWx1ZS5pc01hdGNoKFsnLCddKSk7XHJcblxyXG4gICAgdmFsdWUuZXhwZWN0R3JvdXBFbmQoKTtcclxuXHJcbiAgICByZXR1cm4gbXVsdGlMaW5lU3RyaW5nO1xyXG59O1xyXG5cclxuTXVsdGlMaW5lU3RyaW5nLl9wYXJzZVdrYiA9IGZ1bmN0aW9uICh2YWx1ZSwgb3B0aW9ucykge1xyXG4gICAgdmFyIG11bHRpTGluZVN0cmluZyA9IG5ldyBNdWx0aUxpbmVTdHJpbmcoKTtcclxuICAgIG11bHRpTGluZVN0cmluZy5zcmlkID0gb3B0aW9ucy5zcmlkO1xyXG4gICAgbXVsdGlMaW5lU3RyaW5nLmhhc1ogPSBvcHRpb25zLmhhc1o7XHJcbiAgICBtdWx0aUxpbmVTdHJpbmcuaGFzTSA9IG9wdGlvbnMuaGFzTTtcclxuXHJcbiAgICB2YXIgbGluZVN0cmluZ0NvdW50ID0gdmFsdWUucmVhZFVJbnQzMigpO1xyXG5cclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGluZVN0cmluZ0NvdW50OyBpKyspXHJcbiAgICAgICAgbXVsdGlMaW5lU3RyaW5nLmxpbmVTdHJpbmdzLnB1c2goR2VvbWV0cnkucGFyc2UodmFsdWUsIG9wdGlvbnMpKTtcclxuXHJcbiAgICByZXR1cm4gbXVsdGlMaW5lU3RyaW5nO1xyXG59O1xyXG5cclxuTXVsdGlMaW5lU3RyaW5nLl9wYXJzZVR3a2IgPSBmdW5jdGlvbiAodmFsdWUsIG9wdGlvbnMpIHtcclxuICAgIHZhciBtdWx0aUxpbmVTdHJpbmcgPSBuZXcgTXVsdGlMaW5lU3RyaW5nKCk7XHJcbiAgICBtdWx0aUxpbmVTdHJpbmcuaGFzWiA9IG9wdGlvbnMuaGFzWjtcclxuICAgIG11bHRpTGluZVN0cmluZy5oYXNNID0gb3B0aW9ucy5oYXNNO1xyXG5cclxuICAgIGlmIChvcHRpb25zLmlzRW1wdHkpXHJcbiAgICAgICAgcmV0dXJuIG11bHRpTGluZVN0cmluZztcclxuXHJcbiAgICB2YXIgcHJldmlvdXNQb2ludCA9IG5ldyBQb2ludCgwLCAwLCBvcHRpb25zLmhhc1ogPyAwIDogdW5kZWZpbmVkLCBvcHRpb25zLmhhc00gPyAwIDogdW5kZWZpbmVkKTtcclxuICAgIHZhciBsaW5lU3RyaW5nQ291bnQgPSB2YWx1ZS5yZWFkVmFySW50KCk7XHJcblxyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaW5lU3RyaW5nQ291bnQ7IGkrKykge1xyXG4gICAgICAgIHZhciBsaW5lU3RyaW5nID0gbmV3IExpbmVTdHJpbmcoKTtcclxuICAgICAgICBsaW5lU3RyaW5nLmhhc1ogPSBvcHRpb25zLmhhc1o7XHJcbiAgICAgICAgbGluZVN0cmluZy5oYXNNID0gb3B0aW9ucy5oYXNNO1xyXG5cclxuICAgICAgICB2YXIgcG9pbnRDb3VudCA9IHZhbHVlLnJlYWRWYXJJbnQoKTtcclxuXHJcbiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBwb2ludENvdW50OyBqKyspXHJcbiAgICAgICAgICAgIGxpbmVTdHJpbmcucG9pbnRzLnB1c2goUG9pbnQuX3JlYWRUd2tiUG9pbnQodmFsdWUsIG9wdGlvbnMsIHByZXZpb3VzUG9pbnQpKTtcclxuXHJcbiAgICAgICAgbXVsdGlMaW5lU3RyaW5nLmxpbmVTdHJpbmdzLnB1c2gobGluZVN0cmluZyk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIG11bHRpTGluZVN0cmluZztcclxufTtcclxuXHJcbk11bHRpTGluZVN0cmluZy5fcGFyc2VHZW9KU09OID0gZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICB2YXIgbXVsdGlMaW5lU3RyaW5nID0gbmV3IE11bHRpTGluZVN0cmluZygpO1xyXG5cclxuICAgIGlmICh2YWx1ZS5jb29yZGluYXRlcy5sZW5ndGggPiAwICYmIHZhbHVlLmNvb3JkaW5hdGVzWzBdLmxlbmd0aCA+IDApXHJcbiAgICAgICAgbXVsdGlMaW5lU3RyaW5nLmhhc1ogPSB2YWx1ZS5jb29yZGluYXRlc1swXVswXS5sZW5ndGggPiAyO1xyXG5cclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdmFsdWUuY29vcmRpbmF0ZXMubGVuZ3RoOyBpKyspXHJcbiAgICAgICAgbXVsdGlMaW5lU3RyaW5nLmxpbmVTdHJpbmdzLnB1c2goTGluZVN0cmluZy5fcGFyc2VHZW9KU09OKHsgY29vcmRpbmF0ZXM6IHZhbHVlLmNvb3JkaW5hdGVzW2ldIH0pKTtcclxuXHJcbiAgICByZXR1cm4gbXVsdGlMaW5lU3RyaW5nO1xyXG59O1xyXG5cclxuTXVsdGlMaW5lU3RyaW5nLnByb3RvdHlwZS50b1drdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIGlmICh0aGlzLmxpbmVTdHJpbmdzLmxlbmd0aCA9PT0gMClcclxuICAgICAgICByZXR1cm4gdGhpcy5fZ2V0V2t0VHlwZShUeXBlcy53a3QuTXVsdGlMaW5lU3RyaW5nLCB0cnVlKTtcclxuXHJcbiAgICB2YXIgd2t0ID0gdGhpcy5fZ2V0V2t0VHlwZShUeXBlcy53a3QuTXVsdGlMaW5lU3RyaW5nLCBmYWxzZSkgKyAnKCc7XHJcblxyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxpbmVTdHJpbmdzLmxlbmd0aDsgaSsrKVxyXG4gICAgICAgIHdrdCArPSB0aGlzLmxpbmVTdHJpbmdzW2ldLl90b0lubmVyV2t0KCkgKyAnLCc7XHJcblxyXG4gICAgd2t0ID0gd2t0LnNsaWNlKDAsIC0xKTtcclxuICAgIHdrdCArPSAnKSc7XHJcblxyXG4gICAgcmV0dXJuIHdrdDtcclxufTtcclxuXHJcbk11bHRpTGluZVN0cmluZy5wcm90b3R5cGUudG9Xa2IgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgd2tiID0gbmV3IEJpbmFyeVdyaXRlcih0aGlzLl9nZXRXa2JTaXplKCkpO1xyXG5cclxuICAgIHdrYi53cml0ZUludDgoMSk7XHJcblxyXG4gICAgdGhpcy5fd3JpdGVXa2JUeXBlKHdrYiwgVHlwZXMud2tiLk11bHRpTGluZVN0cmluZyk7XHJcbiAgICB3a2Iud3JpdGVVSW50MzJMRSh0aGlzLmxpbmVTdHJpbmdzLmxlbmd0aCk7XHJcblxyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxpbmVTdHJpbmdzLmxlbmd0aDsgaSsrKVxyXG4gICAgICAgIHdrYi53cml0ZUJ1ZmZlcih0aGlzLmxpbmVTdHJpbmdzW2ldLnRvV2tiKHsgc3JpZDogdGhpcy5zcmlkIH0pKTtcclxuXHJcbiAgICByZXR1cm4gd2tiLmJ1ZmZlcjtcclxufTtcclxuXHJcbk11bHRpTGluZVN0cmluZy5wcm90b3R5cGUudG9Ud2tiID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHR3a2IgPSBuZXcgQmluYXJ5V3JpdGVyKDAsIHRydWUpO1xyXG5cclxuICAgIHZhciBwcmVjaXNpb24gPSBHZW9tZXRyeS5nZXRUd2tiUHJlY2lzaW9uKDUsIDAsIDApO1xyXG4gICAgdmFyIGlzRW1wdHkgPSB0aGlzLmxpbmVTdHJpbmdzLmxlbmd0aCA9PT0gMDtcclxuXHJcbiAgICB0aGlzLl93cml0ZVR3a2JIZWFkZXIodHdrYiwgVHlwZXMud2tiLk11bHRpTGluZVN0cmluZywgcHJlY2lzaW9uLCBpc0VtcHR5KTtcclxuXHJcbiAgICBpZiAodGhpcy5saW5lU3RyaW5ncy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgdHdrYi53cml0ZVZhckludCh0aGlzLmxpbmVTdHJpbmdzLmxlbmd0aCk7XHJcblxyXG4gICAgICAgIHZhciBwcmV2aW91c1BvaW50ID0gbmV3IFBvaW50KDAsIDAsIDAsIDApO1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5saW5lU3RyaW5ncy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICB0d2tiLndyaXRlVmFySW50KHRoaXMubGluZVN0cmluZ3NbaV0ucG9pbnRzLmxlbmd0aCk7XHJcblxyXG4gICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHRoaXMubGluZVN0cmluZ3NbaV0ucG9pbnRzLmxlbmd0aDsgaisrKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5saW5lU3RyaW5nc1tpXS5wb2ludHNbal0uX3dyaXRlVHdrYlBvaW50KHR3a2IsIHByZWNpc2lvbiwgcHJldmlvdXNQb2ludCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0d2tiLmJ1ZmZlcjtcclxufTtcclxuXHJcbk11bHRpTGluZVN0cmluZy5wcm90b3R5cGUuX2dldFdrYlNpemUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgc2l6ZSA9IDEgKyA0ICsgNDtcclxuXHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGluZVN0cmluZ3MubGVuZ3RoOyBpKyspXHJcbiAgICAgICAgc2l6ZSArPSB0aGlzLmxpbmVTdHJpbmdzW2ldLl9nZXRXa2JTaXplKCk7XHJcblxyXG4gICAgcmV0dXJuIHNpemU7XHJcbn07XHJcblxyXG5NdWx0aUxpbmVTdHJpbmcucHJvdG90eXBlLnRvR2VvSlNPTiA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XHJcbiAgICB2YXIgZ2VvSlNPTiA9IEdlb21ldHJ5LnByb3RvdHlwZS50b0dlb0pTT04uY2FsbCh0aGlzLCBvcHRpb25zKTtcclxuICAgIGdlb0pTT04udHlwZSA9IFR5cGVzLmdlb0pTT04uTXVsdGlMaW5lU3RyaW5nO1xyXG4gICAgZ2VvSlNPTi5jb29yZGluYXRlcyA9IFtdO1xyXG5cclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5saW5lU3RyaW5ncy5sZW5ndGg7IGkrKylcclxuICAgICAgICBnZW9KU09OLmNvb3JkaW5hdGVzLnB1c2godGhpcy5saW5lU3RyaW5nc1tpXS50b0dlb0pTT04oKS5jb29yZGluYXRlcyk7XHJcblxyXG4gICAgcmV0dXJuIGdlb0pTT047XHJcbn07XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/../node_modules/wkx/lib/multilinestring.js\n");

/***/ }),

/***/ "(action-browser)/../node_modules/wkx/lib/multipoint.js":
/*!*********************************************!*\
  !*** ../node_modules/wkx/lib/multipoint.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = MultiPoint;\r\n\r\nvar util = __webpack_require__(/*! util */ \"util\");\r\n\r\nvar Types = __webpack_require__(/*! ./types */ \"(action-browser)/../node_modules/wkx/lib/types.js\");\r\nvar Geometry = __webpack_require__(/*! ./geometry */ \"(action-browser)/../node_modules/wkx/lib/geometry.js\");\r\nvar Point = __webpack_require__(/*! ./point */ \"(action-browser)/../node_modules/wkx/lib/point.js\");\r\nvar BinaryWriter = __webpack_require__(/*! ./binarywriter */ \"(action-browser)/../node_modules/wkx/lib/binarywriter.js\");\r\n\r\nfunction MultiPoint(points, srid) {\r\n    Geometry.call(this);\r\n\r\n    this.points = points || [];\r\n\tthis.srid = srid;\r\n\t\r\n    if (this.points.length > 0) {\r\n        this.hasZ = this.points[0].hasZ;\r\n        this.hasM = this.points[0].hasM;\r\n    }\r\n}\r\n\r\nutil.inherits(MultiPoint, Geometry);\r\n\r\nMultiPoint.Z = function (points, srid) {\r\n    var multiPoint = new MultiPoint(points, srid);\r\n    multiPoint.hasZ = true;\r\n    return multiPoint;\r\n};\r\n\r\nMultiPoint.M = function (points, srid) {\r\n    var multiPoint = new MultiPoint(points, srid);\r\n    multiPoint.hasM = true;\r\n    return multiPoint;\r\n};\r\n\r\nMultiPoint.ZM = function (points, srid) {\r\n    var multiPoint = new MultiPoint(points, srid);\r\n    multiPoint.hasZ = true;\r\n    multiPoint.hasM = true;\r\n    return multiPoint;\r\n};\r\n\r\nMultiPoint._parseWkt = function (value, options) {\r\n    var multiPoint = new MultiPoint();\r\n    multiPoint.srid = options.srid;\r\n    multiPoint.hasZ = options.hasZ;\r\n    multiPoint.hasM = options.hasM;\r\n\r\n    if (value.isMatch(['EMPTY']))\r\n        return multiPoint;\r\n\r\n    value.expectGroupStart();\r\n    multiPoint.points.push.apply(multiPoint.points, value.matchCoordinates(options));\r\n    value.expectGroupEnd();\r\n\r\n    return multiPoint;\r\n};\r\n\r\nMultiPoint._parseWkb = function (value, options) {\r\n    var multiPoint = new MultiPoint();\r\n    multiPoint.srid = options.srid;\r\n    multiPoint.hasZ = options.hasZ;\r\n    multiPoint.hasM = options.hasM;\r\n\r\n    var pointCount = value.readUInt32();\r\n\r\n    for (var i = 0; i < pointCount; i++)\r\n        multiPoint.points.push(Geometry.parse(value, options));\r\n\r\n    return multiPoint;\r\n};\r\n\r\nMultiPoint._parseTwkb = function (value, options) {\r\n    var multiPoint = new MultiPoint();\r\n    multiPoint.hasZ = options.hasZ;\r\n    multiPoint.hasM = options.hasM;\r\n\r\n    if (options.isEmpty)\r\n        return multiPoint;\r\n\r\n    var previousPoint = new Point(0, 0, options.hasZ ? 0 : undefined, options.hasM ? 0 : undefined);\r\n    var pointCount = value.readVarInt();\r\n\r\n    for (var i = 0; i < pointCount; i++)\r\n        multiPoint.points.push(Point._readTwkbPoint(value, options, previousPoint));\r\n\r\n    return multiPoint;\r\n};\r\n\r\nMultiPoint._parseGeoJSON = function (value) {\r\n    var multiPoint = new MultiPoint();\r\n\r\n    if (value.coordinates.length > 0)\r\n        multiPoint.hasZ = value.coordinates[0].length > 2;\r\n\r\n    for (var i = 0; i < value.coordinates.length; i++)\r\n        multiPoint.points.push(Point._parseGeoJSON({ coordinates: value.coordinates[i] }));\r\n\r\n    return multiPoint;\r\n};\r\n\r\nMultiPoint.prototype.toWkt = function () {\r\n    if (this.points.length === 0)\r\n        return this._getWktType(Types.wkt.MultiPoint, true);\r\n\r\n    var wkt = this._getWktType(Types.wkt.MultiPoint, false) + '(';\r\n\r\n    for (var i = 0; i < this.points.length; i++)\r\n        wkt += this._getWktCoordinate(this.points[i]) + ',';\r\n\r\n    wkt = wkt.slice(0, -1);\r\n    wkt += ')';\r\n\r\n    return wkt;\r\n};\r\n\r\nMultiPoint.prototype.toWkb = function () {\r\n    var wkb = new BinaryWriter(this._getWkbSize());\r\n\r\n    wkb.writeInt8(1);\r\n\r\n    this._writeWkbType(wkb, Types.wkb.MultiPoint);\r\n    wkb.writeUInt32LE(this.points.length);\r\n\r\n    for (var i = 0; i < this.points.length; i++)\r\n        wkb.writeBuffer(this.points[i].toWkb({ srid: this.srid }));\r\n\r\n    return wkb.buffer;\r\n};\r\n\r\nMultiPoint.prototype.toTwkb = function () {\r\n    var twkb = new BinaryWriter(0, true);\r\n\r\n    var precision = Geometry.getTwkbPrecision(5, 0, 0);\r\n    var isEmpty = this.points.length === 0;\r\n\r\n    this._writeTwkbHeader(twkb, Types.wkb.MultiPoint, precision, isEmpty);\r\n\r\n    if (this.points.length > 0) {\r\n        twkb.writeVarInt(this.points.length);\r\n\r\n        var previousPoint = new Point(0, 0, 0, 0);\r\n        for (var i = 0; i < this.points.length; i++)\r\n            this.points[i]._writeTwkbPoint(twkb, precision, previousPoint);\r\n    }\r\n\r\n    return twkb.buffer;\r\n};\r\n\r\nMultiPoint.prototype._getWkbSize = function () {\r\n    var coordinateSize = 16;\r\n\r\n    if (this.hasZ)\r\n        coordinateSize += 8;\r\n    if (this.hasM)\r\n        coordinateSize += 8;\r\n\r\n    coordinateSize += 5;\r\n\r\n    return 1 + 4 + 4 + (this.points.length * coordinateSize);\r\n};\r\n\r\nMultiPoint.prototype.toGeoJSON = function (options) {\r\n    var geoJSON = Geometry.prototype.toGeoJSON.call(this, options);\r\n    geoJSON.type = Types.geoJSON.MultiPoint;\r\n    geoJSON.coordinates = [];\r\n\r\n    for (var i = 0; i < this.points.length; i++)\r\n        geoJSON.coordinates.push(this.points[i].toGeoJSON().coordinates);\r\n\r\n    return geoJSON;\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/../node_modules/wkx/lib/multipoint.js\n");

/***/ }),

/***/ "(action-browser)/../node_modules/wkx/lib/multipolygon.js":
/*!***********************************************!*\
  !*** ../node_modules/wkx/lib/multipolygon.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = MultiPolygon;\r\n\r\nvar util = __webpack_require__(/*! util */ \"util\");\r\n\r\nvar Types = __webpack_require__(/*! ./types */ \"(action-browser)/../node_modules/wkx/lib/types.js\");\r\nvar Geometry = __webpack_require__(/*! ./geometry */ \"(action-browser)/../node_modules/wkx/lib/geometry.js\");\r\nvar Point = __webpack_require__(/*! ./point */ \"(action-browser)/../node_modules/wkx/lib/point.js\");\r\nvar Polygon = __webpack_require__(/*! ./polygon */ \"(action-browser)/../node_modules/wkx/lib/polygon.js\");\r\nvar BinaryWriter = __webpack_require__(/*! ./binarywriter */ \"(action-browser)/../node_modules/wkx/lib/binarywriter.js\");\r\n\r\nfunction MultiPolygon(polygons, srid) {\r\n    Geometry.call(this);\r\n\r\n    this.polygons = polygons || [];\r\n\tthis.srid = srid;\r\n\r\n    if (this.polygons.length > 0) {\r\n        this.hasZ = this.polygons[0].hasZ;\r\n        this.hasM = this.polygons[0].hasM;\r\n    }\r\n}\r\n\r\nutil.inherits(MultiPolygon, Geometry);\r\n\r\nMultiPolygon.Z = function (polygons, srid) {\r\n    var multiPolygon = new MultiPolygon(polygons, srid);\r\n    multiPolygon.hasZ = true;\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon.M = function (polygons, srid) {\r\n    var multiPolygon = new MultiPolygon(polygons, srid);\r\n    multiPolygon.hasM = true;\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon.ZM = function (polygons, srid) {\r\n    var multiPolygon = new MultiPolygon(polygons, srid);\r\n    multiPolygon.hasZ = true;\r\n    multiPolygon.hasM = true;\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon._parseWkt = function (value, options) {\r\n    var multiPolygon = new MultiPolygon();\r\n    multiPolygon.srid = options.srid;\r\n    multiPolygon.hasZ = options.hasZ;\r\n    multiPolygon.hasM = options.hasM;\r\n\r\n    if (value.isMatch(['EMPTY']))\r\n        return multiPolygon;\r\n\r\n    value.expectGroupStart();\r\n\r\n    do {\r\n        value.expectGroupStart();\r\n\r\n        var exteriorRing = [];\r\n        var interiorRings = [];\r\n\r\n        value.expectGroupStart();\r\n        exteriorRing.push.apply(exteriorRing, value.matchCoordinates(options));\r\n        value.expectGroupEnd();\r\n\r\n        while (value.isMatch([','])) {\r\n            value.expectGroupStart();\r\n            interiorRings.push(value.matchCoordinates(options));\r\n            value.expectGroupEnd();\r\n        }\r\n\r\n        multiPolygon.polygons.push(new Polygon(exteriorRing, interiorRings));\r\n\r\n        value.expectGroupEnd();\r\n\r\n    } while (value.isMatch([',']));\r\n\r\n    value.expectGroupEnd();\r\n\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon._parseWkb = function (value, options) {\r\n    var multiPolygon = new MultiPolygon();\r\n    multiPolygon.srid = options.srid;\r\n    multiPolygon.hasZ = options.hasZ;\r\n    multiPolygon.hasM = options.hasM;\r\n\r\n    var polygonCount = value.readUInt32();\r\n\r\n    for (var i = 0; i < polygonCount; i++)\r\n        multiPolygon.polygons.push(Geometry.parse(value, options));\r\n\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon._parseTwkb = function (value, options) {\r\n    var multiPolygon = new MultiPolygon();\r\n    multiPolygon.hasZ = options.hasZ;\r\n    multiPolygon.hasM = options.hasM;\r\n\r\n    if (options.isEmpty)\r\n        return multiPolygon;\r\n\r\n    var previousPoint = new Point(0, 0, options.hasZ ? 0 : undefined, options.hasM ? 0 : undefined);\r\n    var polygonCount = value.readVarInt();\r\n\r\n    for (var i = 0; i < polygonCount; i++) {\r\n        var polygon = new Polygon();\r\n        polygon.hasZ = options.hasZ;\r\n        polygon.hasM = options.hasM;\r\n\r\n        var ringCount = value.readVarInt();\r\n        var exteriorRingCount = value.readVarInt();\r\n\r\n        for (var j = 0; j < exteriorRingCount; j++)\r\n            polygon.exteriorRing.push(Point._readTwkbPoint(value, options, previousPoint));\r\n\r\n        for (j = 1; j < ringCount; j++) {\r\n            var interiorRing = [];\r\n\r\n            var interiorRingCount = value.readVarInt();\r\n\r\n            for (var k = 0; k < interiorRingCount; k++)\r\n                interiorRing.push(Point._readTwkbPoint(value, options, previousPoint));\r\n\r\n            polygon.interiorRings.push(interiorRing);\r\n        }\r\n\r\n        multiPolygon.polygons.push(polygon);\r\n    }\r\n\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon._parseGeoJSON = function (value) {\r\n    var multiPolygon = new MultiPolygon();\r\n\r\n    if (value.coordinates.length > 0 && value.coordinates[0].length > 0 && value.coordinates[0][0].length > 0)\r\n        multiPolygon.hasZ = value.coordinates[0][0][0].length > 2;\r\n\r\n    for (var i = 0; i < value.coordinates.length; i++)\r\n        multiPolygon.polygons.push(Polygon._parseGeoJSON({ coordinates: value.coordinates[i] }));\r\n\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon.prototype.toWkt = function () {\r\n    if (this.polygons.length === 0)\r\n        return this._getWktType(Types.wkt.MultiPolygon, true);\r\n\r\n    var wkt = this._getWktType(Types.wkt.MultiPolygon, false) + '(';\r\n\r\n    for (var i = 0; i < this.polygons.length; i++)\r\n        wkt += this.polygons[i]._toInnerWkt() + ',';\r\n\r\n    wkt = wkt.slice(0, -1);\r\n    wkt += ')';\r\n\r\n    return wkt;\r\n};\r\n\r\nMultiPolygon.prototype.toWkb = function () {\r\n    var wkb = new BinaryWriter(this._getWkbSize());\r\n\r\n    wkb.writeInt8(1);\r\n\r\n    this._writeWkbType(wkb, Types.wkb.MultiPolygon);\r\n    wkb.writeUInt32LE(this.polygons.length);\r\n\r\n    for (var i = 0; i < this.polygons.length; i++)\r\n        wkb.writeBuffer(this.polygons[i].toWkb({ srid: this.srid }));\r\n\r\n    return wkb.buffer;\r\n};\r\n\r\nMultiPolygon.prototype.toTwkb = function () {\r\n    var twkb = new BinaryWriter(0, true);\r\n\r\n    var precision = Geometry.getTwkbPrecision(5, 0, 0);\r\n    var isEmpty = this.polygons.length === 0;\r\n\r\n    this._writeTwkbHeader(twkb, Types.wkb.MultiPolygon, precision, isEmpty);\r\n\r\n    if (this.polygons.length > 0) {\r\n        twkb.writeVarInt(this.polygons.length);\r\n\r\n        var previousPoint = new Point(0, 0, 0, 0);\r\n        for (var i = 0; i < this.polygons.length; i++) {\r\n            twkb.writeVarInt(1 + this.polygons[i].interiorRings.length);\r\n\r\n            twkb.writeVarInt(this.polygons[i].exteriorRing.length);\r\n\r\n            for (var j = 0; j < this.polygons[i].exteriorRing.length; j++)\r\n                this.polygons[i].exteriorRing[j]._writeTwkbPoint(twkb, precision, previousPoint);\r\n\r\n            for (j = 0; j < this.polygons[i].interiorRings.length; j++) {\r\n                twkb.writeVarInt(this.polygons[i].interiorRings[j].length);\r\n\r\n                for (var k = 0; k < this.polygons[i].interiorRings[j].length; k++)\r\n                    this.polygons[i].interiorRings[j][k]._writeTwkbPoint(twkb, precision, previousPoint);\r\n            }\r\n        }\r\n    }\r\n\r\n    return twkb.buffer;\r\n};\r\n\r\nMultiPolygon.prototype._getWkbSize = function () {\r\n    var size = 1 + 4 + 4;\r\n\r\n    for (var i = 0; i < this.polygons.length; i++)\r\n        size += this.polygons[i]._getWkbSize();\r\n\r\n    return size;\r\n};\r\n\r\nMultiPolygon.prototype.toGeoJSON = function (options) {\r\n    var geoJSON = Geometry.prototype.toGeoJSON.call(this, options);\r\n    geoJSON.type = Types.geoJSON.MultiPolygon;\r\n    geoJSON.coordinates = [];\r\n\r\n    for (var i = 0; i < this.polygons.length; i++)\r\n        geoJSON.coordinates.push(this.polygons[i].toGeoJSON().coordinates);\r\n\r\n    return geoJSON;\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/../node_modules/wkx/lib/multipolygon.js\n");

/***/ }),

/***/ "(action-browser)/../node_modules/wkx/lib/point.js":
/*!****************************************!*\
  !*** ../node_modules/wkx/lib/point.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = Point;\r\n\r\nvar util = __webpack_require__(/*! util */ \"util\");\r\n\r\nvar Geometry = __webpack_require__(/*! ./geometry */ \"(action-browser)/../node_modules/wkx/lib/geometry.js\");\r\nvar Types = __webpack_require__(/*! ./types */ \"(action-browser)/../node_modules/wkx/lib/types.js\");\r\nvar BinaryWriter = __webpack_require__(/*! ./binarywriter */ \"(action-browser)/../node_modules/wkx/lib/binarywriter.js\");\r\nvar ZigZag = __webpack_require__(/*! ./zigzag.js */ \"(action-browser)/../node_modules/wkx/lib/zigzag.js\");\r\n\r\nfunction Point(x, y, z, m, srid) {\r\n    Geometry.call(this);\r\n\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n    this.m = m;\r\n\tthis.srid = srid;\r\n\r\n    this.hasZ = typeof this.z !== 'undefined';\r\n    this.hasM = typeof this.m !== 'undefined';\r\n}\r\n\r\nutil.inherits(Point, Geometry);\r\n\r\nPoint.Z = function (x, y, z, srid) {\r\n    var point = new Point(x, y, z, undefined, srid);\r\n    point.hasZ = true;\r\n    return point;\r\n};\r\n\r\nPoint.M = function (x, y, m, srid) {\r\n    var point = new Point(x, y, undefined, m, srid);\r\n    point.hasM = true;\r\n    return point;\r\n};\r\n\r\nPoint.ZM = function (x, y, z, m, srid) {\r\n    var point = new Point(x, y, z, m, srid);\r\n    point.hasZ = true;\r\n    point.hasM = true;\r\n    return point;\r\n};\r\n\r\nPoint._parseWkt = function (value, options) {\r\n    var point = new Point();\r\n    point.srid = options.srid;\r\n    point.hasZ = options.hasZ;\r\n    point.hasM = options.hasM;\r\n\r\n    if (value.isMatch(['EMPTY']))\r\n        return point;\r\n\r\n    value.expectGroupStart();\r\n\r\n    var coordinate = value.matchCoordinate(options);\r\n\r\n    point.x = coordinate.x;\r\n    point.y = coordinate.y;\r\n    point.z = coordinate.z;\r\n    point.m = coordinate.m;\r\n\r\n    value.expectGroupEnd();\r\n\r\n    return point;\r\n};\r\n\r\nPoint._parseWkb = function (value, options) {\r\n    var point = Point._readWkbPoint(value, options);\r\n    point.srid = options.srid;\r\n    return point;\r\n};\r\n\r\nPoint._readWkbPoint = function (value, options) {\r\n    return new Point(value.readDouble(), value.readDouble(),\r\n        options.hasZ ? value.readDouble() : undefined,\r\n        options.hasM ? value.readDouble() : undefined);\r\n};\r\n\r\nPoint._parseTwkb = function (value, options) {\r\n    var point = new Point();\r\n    point.hasZ = options.hasZ;\r\n    point.hasM = options.hasM;\r\n\r\n    if (options.isEmpty)\r\n        return point;\r\n\r\n    point.x = ZigZag.decode(value.readVarInt()) / options.precisionFactor;\r\n    point.y = ZigZag.decode(value.readVarInt()) / options.precisionFactor;\r\n    point.z = options.hasZ ? ZigZag.decode(value.readVarInt()) / options.zPrecisionFactor : undefined;\r\n    point.m = options.hasM ? ZigZag.decode(value.readVarInt()) / options.mPrecisionFactor : undefined;\r\n\r\n    return point;\r\n};\r\n\r\nPoint._readTwkbPoint = function (value, options, previousPoint) {\r\n    previousPoint.x += ZigZag.decode(value.readVarInt()) / options.precisionFactor;\r\n    previousPoint.y += ZigZag.decode(value.readVarInt()) / options.precisionFactor;\r\n\r\n    if (options.hasZ)\r\n        previousPoint.z += ZigZag.decode(value.readVarInt()) / options.zPrecisionFactor;\r\n    if (options.hasM)\r\n        previousPoint.m += ZigZag.decode(value.readVarInt()) / options.mPrecisionFactor;\r\n\r\n    return new Point(previousPoint.x, previousPoint.y, previousPoint.z, previousPoint.m);\r\n};\r\n\r\nPoint._parseGeoJSON = function (value) {\r\n    return Point._readGeoJSONPoint(value.coordinates);\r\n};\r\n\r\nPoint._readGeoJSONPoint = function (coordinates) {\r\n    if (coordinates.length === 0)\r\n        return new Point();\r\n\r\n    if (coordinates.length > 2)\r\n        return new Point(coordinates[0], coordinates[1], coordinates[2]);\r\n\r\n    return new Point(coordinates[0], coordinates[1]);\r\n};\r\n\r\nPoint.prototype.toWkt = function () {\r\n    if (typeof this.x === 'undefined' && typeof this.y === 'undefined' &&\r\n        typeof this.z === 'undefined' && typeof this.m === 'undefined')\r\n        return this._getWktType(Types.wkt.Point, true);\r\n\r\n    return this._getWktType(Types.wkt.Point, false) + '(' + this._getWktCoordinate(this) + ')';\r\n};\r\n\r\nPoint.prototype.toWkb = function (parentOptions) {\r\n    var wkb = new BinaryWriter(this._getWkbSize());\r\n\r\n    wkb.writeInt8(1);\r\n    this._writeWkbType(wkb, Types.wkb.Point, parentOptions);\r\n\r\n    if (typeof this.x === 'undefined' && typeof this.y === 'undefined') {\r\n        wkb.writeDoubleLE(NaN);\r\n        wkb.writeDoubleLE(NaN);\r\n\r\n        if (this.hasZ)\r\n            wkb.writeDoubleLE(NaN);\r\n        if (this.hasM)\r\n            wkb.writeDoubleLE(NaN);\r\n    }\r\n    else {\r\n        this._writeWkbPoint(wkb);\r\n    }\r\n\r\n    return wkb.buffer;\r\n};\r\n\r\nPoint.prototype._writeWkbPoint = function (wkb) {\r\n    wkb.writeDoubleLE(this.x);\r\n    wkb.writeDoubleLE(this.y);\r\n\r\n    if (this.hasZ)\r\n        wkb.writeDoubleLE(this.z);\r\n    if (this.hasM)\r\n        wkb.writeDoubleLE(this.m);\r\n};\r\n\r\nPoint.prototype.toTwkb = function () {\r\n    var twkb = new BinaryWriter(0, true);\r\n\r\n    var precision = Geometry.getTwkbPrecision(5, 0, 0);\r\n    var isEmpty = typeof this.x === 'undefined' && typeof this.y === 'undefined';\r\n\r\n    this._writeTwkbHeader(twkb, Types.wkb.Point, precision, isEmpty);\r\n\r\n    if (!isEmpty)\r\n        this._writeTwkbPoint(twkb, precision, new Point(0, 0, 0, 0));\r\n\r\n    return twkb.buffer;\r\n};\r\n\r\nPoint.prototype._writeTwkbPoint = function (twkb, precision, previousPoint) {\r\n    var x = this.x * precision.xyFactor;\r\n    var y = this.y * precision.xyFactor;\r\n    var z = this.z * precision.zFactor;\r\n    var m = this.m * precision.mFactor;\r\n\r\n    twkb.writeVarInt(ZigZag.encode(x - previousPoint.x));\r\n    twkb.writeVarInt(ZigZag.encode(y - previousPoint.y));\r\n    if (this.hasZ)\r\n        twkb.writeVarInt(ZigZag.encode(z - previousPoint.z));\r\n    if (this.hasM)\r\n        twkb.writeVarInt(ZigZag.encode(m - previousPoint.m));\r\n\r\n    previousPoint.x = x;\r\n    previousPoint.y = y;\r\n    previousPoint.z = z;\r\n    previousPoint.m = m;\r\n};\r\n\r\nPoint.prototype._getWkbSize = function () {\r\n    var size = 1 + 4 + 8 + 8;\r\n\r\n    if (this.hasZ)\r\n        size += 8;\r\n    if (this.hasM)\r\n        size += 8;\r\n\r\n    return size;\r\n};\r\n\r\nPoint.prototype.toGeoJSON = function (options) {\r\n    var geoJSON = Geometry.prototype.toGeoJSON.call(this, options);\r\n    geoJSON.type = Types.geoJSON.Point;\r\n\r\n    if (typeof this.x === 'undefined' && typeof this.y === 'undefined')\r\n        geoJSON.coordinates = [];\r\n    else if (typeof this.z !== 'undefined')\r\n        geoJSON.coordinates = [this.x, this.y, this.z];\r\n    else\r\n        geoJSON.coordinates = [this.x, this.y];\r\n\r\n    return geoJSON;\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/../node_modules/wkx/lib/point.js\n");

/***/ }),

/***/ "(action-browser)/../node_modules/wkx/lib/polygon.js":
/*!******************************************!*\
  !*** ../node_modules/wkx/lib/polygon.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = Polygon;\r\n\r\nvar util = __webpack_require__(/*! util */ \"util\");\r\n\r\nvar Geometry = __webpack_require__(/*! ./geometry */ \"(action-browser)/../node_modules/wkx/lib/geometry.js\");\r\nvar Types = __webpack_require__(/*! ./types */ \"(action-browser)/../node_modules/wkx/lib/types.js\");\r\nvar Point = __webpack_require__(/*! ./point */ \"(action-browser)/../node_modules/wkx/lib/point.js\");\r\nvar BinaryWriter = __webpack_require__(/*! ./binarywriter */ \"(action-browser)/../node_modules/wkx/lib/binarywriter.js\");\r\n\r\nfunction Polygon(exteriorRing, interiorRings, srid) {\r\n    Geometry.call(this);\r\n\r\n    this.exteriorRing = exteriorRing || [];\r\n    this.interiorRings = interiorRings || [];\r\n\tthis.srid = srid;\r\n\r\n    if (this.exteriorRing.length > 0) {\r\n        this.hasZ = this.exteriorRing[0].hasZ;\r\n        this.hasM = this.exteriorRing[0].hasM;\r\n    }\r\n}\r\n\r\nutil.inherits(Polygon, Geometry);\r\n\r\nPolygon.Z = function (exteriorRing, interiorRings, srid) {\r\n    var polygon = new Polygon(exteriorRing, interiorRings, srid);\r\n    polygon.hasZ = true;\r\n    return polygon;\r\n};\r\n\r\nPolygon.M = function (exteriorRing, interiorRings, srid) {\r\n    var polygon = new Polygon(exteriorRing, interiorRings, srid);\r\n    polygon.hasM = true;\r\n    return polygon;\r\n};\r\n\r\nPolygon.ZM = function (exteriorRing, interiorRings, srid) {\r\n    var polygon = new Polygon(exteriorRing, interiorRings, srid);\r\n    polygon.hasZ = true;\r\n    polygon.hasM = true;\r\n    return polygon;\r\n};\r\n\r\nPolygon._parseWkt = function (value, options) {\r\n    var polygon = new Polygon();\r\n    polygon.srid = options.srid;\r\n    polygon.hasZ = options.hasZ;\r\n    polygon.hasM = options.hasM;\r\n\r\n    if (value.isMatch(['EMPTY']))\r\n        return polygon;\r\n\r\n    value.expectGroupStart();\r\n\r\n    value.expectGroupStart();\r\n    polygon.exteriorRing.push.apply(polygon.exteriorRing, value.matchCoordinates(options));\r\n    value.expectGroupEnd();\r\n\r\n    while (value.isMatch([','])) {\r\n        value.expectGroupStart();\r\n        polygon.interiorRings.push(value.matchCoordinates(options));\r\n        value.expectGroupEnd();\r\n    }\r\n\r\n    value.expectGroupEnd();\r\n\r\n    return polygon;\r\n};\r\n\r\nPolygon._parseWkb = function (value, options) {\r\n    var polygon = new Polygon();\r\n    polygon.srid = options.srid;\r\n    polygon.hasZ = options.hasZ;\r\n    polygon.hasM = options.hasM;\r\n\r\n    var ringCount = value.readUInt32();\r\n\r\n    if (ringCount > 0) {\r\n        var exteriorRingCount = value.readUInt32();\r\n\r\n        for (var i = 0; i < exteriorRingCount; i++)\r\n            polygon.exteriorRing.push(Point._readWkbPoint(value, options));\r\n\r\n        for (i = 1; i < ringCount; i++) {\r\n            var interiorRing = [];\r\n\r\n            var interiorRingCount = value.readUInt32();\r\n\r\n            for (var j = 0; j < interiorRingCount; j++)\r\n                interiorRing.push(Point._readWkbPoint(value, options));\r\n\r\n            polygon.interiorRings.push(interiorRing);\r\n        }\r\n    }\r\n\r\n    return polygon;\r\n};\r\n\r\nPolygon._parseTwkb = function (value, options) {\r\n    var polygon = new Polygon();\r\n    polygon.hasZ = options.hasZ;\r\n    polygon.hasM = options.hasM;\r\n\r\n    if (options.isEmpty)\r\n        return polygon;\r\n\r\n    var previousPoint = new Point(0, 0, options.hasZ ? 0 : undefined, options.hasM ? 0 : undefined);\r\n    var ringCount = value.readVarInt();\r\n    var exteriorRingCount = value.readVarInt();\r\n\r\n    for (var i = 0; i < exteriorRingCount; i++)\r\n        polygon.exteriorRing.push(Point._readTwkbPoint(value, options, previousPoint));\r\n\r\n    for (i = 1; i < ringCount; i++) {\r\n        var interiorRing = [];\r\n\r\n        var interiorRingCount = value.readVarInt();\r\n\r\n        for (var j = 0; j < interiorRingCount; j++)\r\n            interiorRing.push(Point._readTwkbPoint(value, options, previousPoint));\r\n\r\n        polygon.interiorRings.push(interiorRing);\r\n    }\r\n\r\n    return polygon;\r\n};\r\n\r\nPolygon._parseGeoJSON = function (value) {\r\n    var polygon = new Polygon();\r\n\r\n    if (value.coordinates.length > 0 && value.coordinates[0].length > 0)\r\n        polygon.hasZ = value.coordinates[0][0].length > 2;\r\n\r\n    for (var i = 0; i < value.coordinates.length; i++) {\r\n        if (i > 0)\r\n            polygon.interiorRings.push([]);\r\n\r\n        for (var j = 0; j  < value.coordinates[i].length; j++) {\r\n            if (i === 0)\r\n                polygon.exteriorRing.push(Point._readGeoJSONPoint(value.coordinates[i][j]));\r\n            else\r\n                polygon.interiorRings[i - 1].push(Point._readGeoJSONPoint(value.coordinates[i][j]));\r\n        }\r\n    }\r\n\r\n    return polygon;\r\n};\r\n\r\nPolygon.prototype.toWkt = function () {\r\n    if (this.exteriorRing.length === 0)\r\n        return this._getWktType(Types.wkt.Polygon, true);\r\n\r\n    return this._getWktType(Types.wkt.Polygon, false) + this._toInnerWkt();\r\n};\r\n\r\nPolygon.prototype._toInnerWkt = function () {\r\n    var innerWkt = '((';\r\n\r\n    for (var i = 0; i < this.exteriorRing.length; i++)\r\n        innerWkt += this._getWktCoordinate(this.exteriorRing[i]) + ',';\r\n\r\n    innerWkt = innerWkt.slice(0, -1);\r\n    innerWkt += ')';\r\n\r\n    for (i = 0; i < this.interiorRings.length; i++) {\r\n        innerWkt += ',(';\r\n\r\n        for (var j = 0; j < this.interiorRings[i].length; j++) {\r\n            innerWkt += this._getWktCoordinate(this.interiorRings[i][j]) + ',';\r\n        }\r\n\r\n        innerWkt = innerWkt.slice(0, -1);\r\n        innerWkt += ')';\r\n    }\r\n\r\n    innerWkt += ')';\r\n\r\n    return innerWkt;\r\n};\r\n\r\nPolygon.prototype.toWkb = function (parentOptions) {\r\n    var wkb = new BinaryWriter(this._getWkbSize());\r\n\r\n    wkb.writeInt8(1);\r\n\r\n    this._writeWkbType(wkb, Types.wkb.Polygon, parentOptions);\r\n\r\n    if (this.exteriorRing.length > 0) {\r\n        wkb.writeUInt32LE(1 + this.interiorRings.length);\r\n        wkb.writeUInt32LE(this.exteriorRing.length);\r\n    }\r\n    else {\r\n        wkb.writeUInt32LE(0);\r\n    }\r\n\r\n    for (var i = 0; i < this.exteriorRing.length; i++)\r\n        this.exteriorRing[i]._writeWkbPoint(wkb);\r\n\r\n    for (i = 0; i < this.interiorRings.length; i++) {\r\n        wkb.writeUInt32LE(this.interiorRings[i].length);\r\n\r\n        for (var j = 0; j < this.interiorRings[i].length; j++)\r\n            this.interiorRings[i][j]._writeWkbPoint(wkb);\r\n    }\r\n\r\n    return wkb.buffer;\r\n};\r\n\r\nPolygon.prototype.toTwkb = function () {\r\n    var twkb = new BinaryWriter(0, true);\r\n\r\n    var precision = Geometry.getTwkbPrecision(5, 0, 0);\r\n    var isEmpty = this.exteriorRing.length === 0;\r\n\r\n    this._writeTwkbHeader(twkb, Types.wkb.Polygon, precision, isEmpty);\r\n\r\n    if (this.exteriorRing.length > 0) {\r\n        twkb.writeVarInt(1 + this.interiorRings.length);\r\n\r\n        twkb.writeVarInt(this.exteriorRing.length);\r\n\r\n        var previousPoint = new Point(0, 0, 0, 0);\r\n        for (var i = 0; i < this.exteriorRing.length; i++)\r\n            this.exteriorRing[i]._writeTwkbPoint(twkb, precision, previousPoint);\r\n\r\n        for (i = 0; i < this.interiorRings.length; i++) {\r\n            twkb.writeVarInt(this.interiorRings[i].length);\r\n\r\n            for (var j = 0; j < this.interiorRings[i].length; j++)\r\n                this.interiorRings[i][j]._writeTwkbPoint(twkb, precision, previousPoint);\r\n        }\r\n    }\r\n\r\n    return twkb.buffer;\r\n};\r\n\r\nPolygon.prototype._getWkbSize = function () {\r\n    var coordinateSize = 16;\r\n\r\n    if (this.hasZ)\r\n        coordinateSize += 8;\r\n    if (this.hasM)\r\n        coordinateSize += 8;\r\n\r\n    var size = 1 + 4 + 4;\r\n\r\n    if (this.exteriorRing.length > 0)\r\n        size += 4 + (this.exteriorRing.length * coordinateSize);\r\n\r\n    for (var i = 0; i < this.interiorRings.length; i++)\r\n        size += 4 + (this.interiorRings[i].length * coordinateSize);\r\n\r\n    return size;\r\n};\r\n\r\nPolygon.prototype.toGeoJSON = function (options) {\r\n    var geoJSON = Geometry.prototype.toGeoJSON.call(this, options);\r\n    geoJSON.type = Types.geoJSON.Polygon;\r\n    geoJSON.coordinates = [];\r\n\r\n    if (this.exteriorRing.length > 0) {\r\n        var exteriorRing = [];\r\n\r\n        for (var i = 0; i < this.exteriorRing.length; i++) {\r\n            if (this.hasZ)\r\n                exteriorRing.push([this.exteriorRing[i].x, this.exteriorRing[i].y, this.exteriorRing[i].z]);\r\n            else\r\n                exteriorRing.push([this.exteriorRing[i].x, this.exteriorRing[i].y]);\r\n        }\r\n\r\n        geoJSON.coordinates.push(exteriorRing);\r\n    }\r\n\r\n    for (var j = 0; j < this.interiorRings.length; j++) {\r\n        var interiorRing = [];\r\n\r\n        for (var k = 0; k < this.interiorRings[j].length; k++) {\r\n            if (this.hasZ)\r\n                interiorRing.push([this.interiorRings[j][k].x, this.interiorRings[j][k].y, this.interiorRings[j][k].z]);\r\n            else\r\n                interiorRing.push([this.interiorRings[j][k].x, this.interiorRings[j][k].y]);\r\n        }\r\n\r\n        geoJSON.coordinates.push(interiorRing);\r\n    }\r\n\r\n    return geoJSON;\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uLi9ub2RlX21vZHVsZXMvd2t4L2xpYi9wb2x5Z29uLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSxXQUFXLG1CQUFPLENBQUMsa0JBQU07QUFDekI7QUFDQSxlQUFlLG1CQUFPLENBQUMsd0VBQVk7QUFDbkMsWUFBWSxtQkFBTyxDQUFDLGtFQUFTO0FBQzdCLFlBQVksbUJBQU8sQ0FBQyxrRUFBUztBQUM3QixtQkFBbUIsbUJBQU8sQ0FBQyxnRkFBZ0I7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHVCQUF1QjtBQUMvQztBQUNBO0FBQ0Esb0JBQW9CLGVBQWU7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsdUJBQXVCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQix1QkFBdUI7QUFDM0M7QUFDQTtBQUNBLGdCQUFnQixlQUFlO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHVCQUF1QjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDhCQUE4QjtBQUNsRDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0Isa0NBQWtDO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsOEJBQThCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsK0JBQStCO0FBQy9DO0FBQ0E7QUFDQSx3QkFBd0Isa0NBQWtDO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw4QkFBOEI7QUFDbEQ7QUFDQTtBQUNBLGdCQUFnQiwrQkFBK0I7QUFDL0M7QUFDQTtBQUNBLHdCQUF3QixrQ0FBa0M7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qiw4QkFBOEI7QUFDdEQ7QUFDQTtBQUNBLG9CQUFvQiwrQkFBK0I7QUFDbkQ7QUFDQTtBQUNBLDRCQUE0QixrQ0FBa0M7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiwrQkFBK0I7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsOEJBQThCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiwrQkFBK0I7QUFDbkQ7QUFDQTtBQUNBLHdCQUF3QixrQ0FBa0M7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2NsaWVudC8uLi9ub2RlX21vZHVsZXMvd2t4L2xpYi9wb2x5Z29uLmpzP2I4NmUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBQb2x5Z29uO1xyXG5cclxudmFyIHV0aWwgPSByZXF1aXJlKCd1dGlsJyk7XHJcblxyXG52YXIgR2VvbWV0cnkgPSByZXF1aXJlKCcuL2dlb21ldHJ5Jyk7XHJcbnZhciBUeXBlcyA9IHJlcXVpcmUoJy4vdHlwZXMnKTtcclxudmFyIFBvaW50ID0gcmVxdWlyZSgnLi9wb2ludCcpO1xyXG52YXIgQmluYXJ5V3JpdGVyID0gcmVxdWlyZSgnLi9iaW5hcnl3cml0ZXInKTtcclxuXHJcbmZ1bmN0aW9uIFBvbHlnb24oZXh0ZXJpb3JSaW5nLCBpbnRlcmlvclJpbmdzLCBzcmlkKSB7XHJcbiAgICBHZW9tZXRyeS5jYWxsKHRoaXMpO1xyXG5cclxuICAgIHRoaXMuZXh0ZXJpb3JSaW5nID0gZXh0ZXJpb3JSaW5nIHx8IFtdO1xyXG4gICAgdGhpcy5pbnRlcmlvclJpbmdzID0gaW50ZXJpb3JSaW5ncyB8fCBbXTtcclxuXHR0aGlzLnNyaWQgPSBzcmlkO1xyXG5cclxuICAgIGlmICh0aGlzLmV4dGVyaW9yUmluZy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgdGhpcy5oYXNaID0gdGhpcy5leHRlcmlvclJpbmdbMF0uaGFzWjtcclxuICAgICAgICB0aGlzLmhhc00gPSB0aGlzLmV4dGVyaW9yUmluZ1swXS5oYXNNO1xyXG4gICAgfVxyXG59XHJcblxyXG51dGlsLmluaGVyaXRzKFBvbHlnb24sIEdlb21ldHJ5KTtcclxuXHJcblBvbHlnb24uWiA9IGZ1bmN0aW9uIChleHRlcmlvclJpbmcsIGludGVyaW9yUmluZ3MsIHNyaWQpIHtcclxuICAgIHZhciBwb2x5Z29uID0gbmV3IFBvbHlnb24oZXh0ZXJpb3JSaW5nLCBpbnRlcmlvclJpbmdzLCBzcmlkKTtcclxuICAgIHBvbHlnb24uaGFzWiA9IHRydWU7XHJcbiAgICByZXR1cm4gcG9seWdvbjtcclxufTtcclxuXHJcblBvbHlnb24uTSA9IGZ1bmN0aW9uIChleHRlcmlvclJpbmcsIGludGVyaW9yUmluZ3MsIHNyaWQpIHtcclxuICAgIHZhciBwb2x5Z29uID0gbmV3IFBvbHlnb24oZXh0ZXJpb3JSaW5nLCBpbnRlcmlvclJpbmdzLCBzcmlkKTtcclxuICAgIHBvbHlnb24uaGFzTSA9IHRydWU7XHJcbiAgICByZXR1cm4gcG9seWdvbjtcclxufTtcclxuXHJcblBvbHlnb24uWk0gPSBmdW5jdGlvbiAoZXh0ZXJpb3JSaW5nLCBpbnRlcmlvclJpbmdzLCBzcmlkKSB7XHJcbiAgICB2YXIgcG9seWdvbiA9IG5ldyBQb2x5Z29uKGV4dGVyaW9yUmluZywgaW50ZXJpb3JSaW5ncywgc3JpZCk7XHJcbiAgICBwb2x5Z29uLmhhc1ogPSB0cnVlO1xyXG4gICAgcG9seWdvbi5oYXNNID0gdHJ1ZTtcclxuICAgIHJldHVybiBwb2x5Z29uO1xyXG59O1xyXG5cclxuUG9seWdvbi5fcGFyc2VXa3QgPSBmdW5jdGlvbiAodmFsdWUsIG9wdGlvbnMpIHtcclxuICAgIHZhciBwb2x5Z29uID0gbmV3IFBvbHlnb24oKTtcclxuICAgIHBvbHlnb24uc3JpZCA9IG9wdGlvbnMuc3JpZDtcclxuICAgIHBvbHlnb24uaGFzWiA9IG9wdGlvbnMuaGFzWjtcclxuICAgIHBvbHlnb24uaGFzTSA9IG9wdGlvbnMuaGFzTTtcclxuXHJcbiAgICBpZiAodmFsdWUuaXNNYXRjaChbJ0VNUFRZJ10pKVxyXG4gICAgICAgIHJldHVybiBwb2x5Z29uO1xyXG5cclxuICAgIHZhbHVlLmV4cGVjdEdyb3VwU3RhcnQoKTtcclxuXHJcbiAgICB2YWx1ZS5leHBlY3RHcm91cFN0YXJ0KCk7XHJcbiAgICBwb2x5Z29uLmV4dGVyaW9yUmluZy5wdXNoLmFwcGx5KHBvbHlnb24uZXh0ZXJpb3JSaW5nLCB2YWx1ZS5tYXRjaENvb3JkaW5hdGVzKG9wdGlvbnMpKTtcclxuICAgIHZhbHVlLmV4cGVjdEdyb3VwRW5kKCk7XHJcblxyXG4gICAgd2hpbGUgKHZhbHVlLmlzTWF0Y2goWycsJ10pKSB7XHJcbiAgICAgICAgdmFsdWUuZXhwZWN0R3JvdXBTdGFydCgpO1xyXG4gICAgICAgIHBvbHlnb24uaW50ZXJpb3JSaW5ncy5wdXNoKHZhbHVlLm1hdGNoQ29vcmRpbmF0ZXMob3B0aW9ucykpO1xyXG4gICAgICAgIHZhbHVlLmV4cGVjdEdyb3VwRW5kKCk7XHJcbiAgICB9XHJcblxyXG4gICAgdmFsdWUuZXhwZWN0R3JvdXBFbmQoKTtcclxuXHJcbiAgICByZXR1cm4gcG9seWdvbjtcclxufTtcclxuXHJcblBvbHlnb24uX3BhcnNlV2tiID0gZnVuY3Rpb24gKHZhbHVlLCBvcHRpb25zKSB7XHJcbiAgICB2YXIgcG9seWdvbiA9IG5ldyBQb2x5Z29uKCk7XHJcbiAgICBwb2x5Z29uLnNyaWQgPSBvcHRpb25zLnNyaWQ7XHJcbiAgICBwb2x5Z29uLmhhc1ogPSBvcHRpb25zLmhhc1o7XHJcbiAgICBwb2x5Z29uLmhhc00gPSBvcHRpb25zLmhhc007XHJcblxyXG4gICAgdmFyIHJpbmdDb3VudCA9IHZhbHVlLnJlYWRVSW50MzIoKTtcclxuXHJcbiAgICBpZiAocmluZ0NvdW50ID4gMCkge1xyXG4gICAgICAgIHZhciBleHRlcmlvclJpbmdDb3VudCA9IHZhbHVlLnJlYWRVSW50MzIoKTtcclxuXHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBleHRlcmlvclJpbmdDb3VudDsgaSsrKVxyXG4gICAgICAgICAgICBwb2x5Z29uLmV4dGVyaW9yUmluZy5wdXNoKFBvaW50Ll9yZWFkV2tiUG9pbnQodmFsdWUsIG9wdGlvbnMpKTtcclxuXHJcbiAgICAgICAgZm9yIChpID0gMTsgaSA8IHJpbmdDb3VudDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHZhciBpbnRlcmlvclJpbmcgPSBbXTtcclxuXHJcbiAgICAgICAgICAgIHZhciBpbnRlcmlvclJpbmdDb3VudCA9IHZhbHVlLnJlYWRVSW50MzIoKTtcclxuXHJcbiAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgaW50ZXJpb3JSaW5nQ291bnQ7IGorKylcclxuICAgICAgICAgICAgICAgIGludGVyaW9yUmluZy5wdXNoKFBvaW50Ll9yZWFkV2tiUG9pbnQodmFsdWUsIG9wdGlvbnMpKTtcclxuXHJcbiAgICAgICAgICAgIHBvbHlnb24uaW50ZXJpb3JSaW5ncy5wdXNoKGludGVyaW9yUmluZyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBwb2x5Z29uO1xyXG59O1xyXG5cclxuUG9seWdvbi5fcGFyc2VUd2tiID0gZnVuY3Rpb24gKHZhbHVlLCBvcHRpb25zKSB7XHJcbiAgICB2YXIgcG9seWdvbiA9IG5ldyBQb2x5Z29uKCk7XHJcbiAgICBwb2x5Z29uLmhhc1ogPSBvcHRpb25zLmhhc1o7XHJcbiAgICBwb2x5Z29uLmhhc00gPSBvcHRpb25zLmhhc007XHJcblxyXG4gICAgaWYgKG9wdGlvbnMuaXNFbXB0eSlcclxuICAgICAgICByZXR1cm4gcG9seWdvbjtcclxuXHJcbiAgICB2YXIgcHJldmlvdXNQb2ludCA9IG5ldyBQb2ludCgwLCAwLCBvcHRpb25zLmhhc1ogPyAwIDogdW5kZWZpbmVkLCBvcHRpb25zLmhhc00gPyAwIDogdW5kZWZpbmVkKTtcclxuICAgIHZhciByaW5nQ291bnQgPSB2YWx1ZS5yZWFkVmFySW50KCk7XHJcbiAgICB2YXIgZXh0ZXJpb3JSaW5nQ291bnQgPSB2YWx1ZS5yZWFkVmFySW50KCk7XHJcblxyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBleHRlcmlvclJpbmdDb3VudDsgaSsrKVxyXG4gICAgICAgIHBvbHlnb24uZXh0ZXJpb3JSaW5nLnB1c2goUG9pbnQuX3JlYWRUd2tiUG9pbnQodmFsdWUsIG9wdGlvbnMsIHByZXZpb3VzUG9pbnQpKTtcclxuXHJcbiAgICBmb3IgKGkgPSAxOyBpIDwgcmluZ0NvdW50OyBpKyspIHtcclxuICAgICAgICB2YXIgaW50ZXJpb3JSaW5nID0gW107XHJcblxyXG4gICAgICAgIHZhciBpbnRlcmlvclJpbmdDb3VudCA9IHZhbHVlLnJlYWRWYXJJbnQoKTtcclxuXHJcbiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBpbnRlcmlvclJpbmdDb3VudDsgaisrKVxyXG4gICAgICAgICAgICBpbnRlcmlvclJpbmcucHVzaChQb2ludC5fcmVhZFR3a2JQb2ludCh2YWx1ZSwgb3B0aW9ucywgcHJldmlvdXNQb2ludCkpO1xyXG5cclxuICAgICAgICBwb2x5Z29uLmludGVyaW9yUmluZ3MucHVzaChpbnRlcmlvclJpbmcpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBwb2x5Z29uO1xyXG59O1xyXG5cclxuUG9seWdvbi5fcGFyc2VHZW9KU09OID0gZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICB2YXIgcG9seWdvbiA9IG5ldyBQb2x5Z29uKCk7XHJcblxyXG4gICAgaWYgKHZhbHVlLmNvb3JkaW5hdGVzLmxlbmd0aCA+IDAgJiYgdmFsdWUuY29vcmRpbmF0ZXNbMF0ubGVuZ3RoID4gMClcclxuICAgICAgICBwb2x5Z29uLmhhc1ogPSB2YWx1ZS5jb29yZGluYXRlc1swXVswXS5sZW5ndGggPiAyO1xyXG5cclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdmFsdWUuY29vcmRpbmF0ZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBpZiAoaSA+IDApXHJcbiAgICAgICAgICAgIHBvbHlnb24uaW50ZXJpb3JSaW5ncy5wdXNoKFtdKTtcclxuXHJcbiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogIDwgdmFsdWUuY29vcmRpbmF0ZXNbaV0ubGVuZ3RoOyBqKyspIHtcclxuICAgICAgICAgICAgaWYgKGkgPT09IDApXHJcbiAgICAgICAgICAgICAgICBwb2x5Z29uLmV4dGVyaW9yUmluZy5wdXNoKFBvaW50Ll9yZWFkR2VvSlNPTlBvaW50KHZhbHVlLmNvb3JkaW5hdGVzW2ldW2pdKSk7XHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgIHBvbHlnb24uaW50ZXJpb3JSaW5nc1tpIC0gMV0ucHVzaChQb2ludC5fcmVhZEdlb0pTT05Qb2ludCh2YWx1ZS5jb29yZGluYXRlc1tpXVtqXSkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gcG9seWdvbjtcclxufTtcclxuXHJcblBvbHlnb24ucHJvdG90eXBlLnRvV2t0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgaWYgKHRoaXMuZXh0ZXJpb3JSaW5nLmxlbmd0aCA9PT0gMClcclxuICAgICAgICByZXR1cm4gdGhpcy5fZ2V0V2t0VHlwZShUeXBlcy53a3QuUG9seWdvbiwgdHJ1ZSk7XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuX2dldFdrdFR5cGUoVHlwZXMud2t0LlBvbHlnb24sIGZhbHNlKSArIHRoaXMuX3RvSW5uZXJXa3QoKTtcclxufTtcclxuXHJcblBvbHlnb24ucHJvdG90eXBlLl90b0lubmVyV2t0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGlubmVyV2t0ID0gJygoJztcclxuXHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuZXh0ZXJpb3JSaW5nLmxlbmd0aDsgaSsrKVxyXG4gICAgICAgIGlubmVyV2t0ICs9IHRoaXMuX2dldFdrdENvb3JkaW5hdGUodGhpcy5leHRlcmlvclJpbmdbaV0pICsgJywnO1xyXG5cclxuICAgIGlubmVyV2t0ID0gaW5uZXJXa3Quc2xpY2UoMCwgLTEpO1xyXG4gICAgaW5uZXJXa3QgKz0gJyknO1xyXG5cclxuICAgIGZvciAoaSA9IDA7IGkgPCB0aGlzLmludGVyaW9yUmluZ3MubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBpbm5lcldrdCArPSAnLCgnO1xyXG5cclxuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHRoaXMuaW50ZXJpb3JSaW5nc1tpXS5sZW5ndGg7IGorKykge1xyXG4gICAgICAgICAgICBpbm5lcldrdCArPSB0aGlzLl9nZXRXa3RDb29yZGluYXRlKHRoaXMuaW50ZXJpb3JSaW5nc1tpXVtqXSkgKyAnLCc7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpbm5lcldrdCA9IGlubmVyV2t0LnNsaWNlKDAsIC0xKTtcclxuICAgICAgICBpbm5lcldrdCArPSAnKSc7XHJcbiAgICB9XHJcblxyXG4gICAgaW5uZXJXa3QgKz0gJyknO1xyXG5cclxuICAgIHJldHVybiBpbm5lcldrdDtcclxufTtcclxuXHJcblBvbHlnb24ucHJvdG90eXBlLnRvV2tiID0gZnVuY3Rpb24gKHBhcmVudE9wdGlvbnMpIHtcclxuICAgIHZhciB3a2IgPSBuZXcgQmluYXJ5V3JpdGVyKHRoaXMuX2dldFdrYlNpemUoKSk7XHJcblxyXG4gICAgd2tiLndyaXRlSW50OCgxKTtcclxuXHJcbiAgICB0aGlzLl93cml0ZVdrYlR5cGUod2tiLCBUeXBlcy53a2IuUG9seWdvbiwgcGFyZW50T3B0aW9ucyk7XHJcblxyXG4gICAgaWYgKHRoaXMuZXh0ZXJpb3JSaW5nLmxlbmd0aCA+IDApIHtcclxuICAgICAgICB3a2Iud3JpdGVVSW50MzJMRSgxICsgdGhpcy5pbnRlcmlvclJpbmdzLmxlbmd0aCk7XHJcbiAgICAgICAgd2tiLndyaXRlVUludDMyTEUodGhpcy5leHRlcmlvclJpbmcubGVuZ3RoKTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIHdrYi53cml0ZVVJbnQzMkxFKDApO1xyXG4gICAgfVxyXG5cclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5leHRlcmlvclJpbmcubGVuZ3RoOyBpKyspXHJcbiAgICAgICAgdGhpcy5leHRlcmlvclJpbmdbaV0uX3dyaXRlV2tiUG9pbnQod2tiKTtcclxuXHJcbiAgICBmb3IgKGkgPSAwOyBpIDwgdGhpcy5pbnRlcmlvclJpbmdzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgd2tiLndyaXRlVUludDMyTEUodGhpcy5pbnRlcmlvclJpbmdzW2ldLmxlbmd0aCk7XHJcblxyXG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdGhpcy5pbnRlcmlvclJpbmdzW2ldLmxlbmd0aDsgaisrKVxyXG4gICAgICAgICAgICB0aGlzLmludGVyaW9yUmluZ3NbaV1bal0uX3dyaXRlV2tiUG9pbnQod2tiKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gd2tiLmJ1ZmZlcjtcclxufTtcclxuXHJcblBvbHlnb24ucHJvdG90eXBlLnRvVHdrYiA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciB0d2tiID0gbmV3IEJpbmFyeVdyaXRlcigwLCB0cnVlKTtcclxuXHJcbiAgICB2YXIgcHJlY2lzaW9uID0gR2VvbWV0cnkuZ2V0VHdrYlByZWNpc2lvbig1LCAwLCAwKTtcclxuICAgIHZhciBpc0VtcHR5ID0gdGhpcy5leHRlcmlvclJpbmcubGVuZ3RoID09PSAwO1xyXG5cclxuICAgIHRoaXMuX3dyaXRlVHdrYkhlYWRlcih0d2tiLCBUeXBlcy53a2IuUG9seWdvbiwgcHJlY2lzaW9uLCBpc0VtcHR5KTtcclxuXHJcbiAgICBpZiAodGhpcy5leHRlcmlvclJpbmcubGVuZ3RoID4gMCkge1xyXG4gICAgICAgIHR3a2Iud3JpdGVWYXJJbnQoMSArIHRoaXMuaW50ZXJpb3JSaW5ncy5sZW5ndGgpO1xyXG5cclxuICAgICAgICB0d2tiLndyaXRlVmFySW50KHRoaXMuZXh0ZXJpb3JSaW5nLmxlbmd0aCk7XHJcblxyXG4gICAgICAgIHZhciBwcmV2aW91c1BvaW50ID0gbmV3IFBvaW50KDAsIDAsIDAsIDApO1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5leHRlcmlvclJpbmcubGVuZ3RoOyBpKyspXHJcbiAgICAgICAgICAgIHRoaXMuZXh0ZXJpb3JSaW5nW2ldLl93cml0ZVR3a2JQb2ludCh0d2tiLCBwcmVjaXNpb24sIHByZXZpb3VzUG9pbnQpO1xyXG5cclxuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgdGhpcy5pbnRlcmlvclJpbmdzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHR3a2Iud3JpdGVWYXJJbnQodGhpcy5pbnRlcmlvclJpbmdzW2ldLmxlbmd0aCk7XHJcblxyXG4gICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHRoaXMuaW50ZXJpb3JSaW5nc1tpXS5sZW5ndGg7IGorKylcclxuICAgICAgICAgICAgICAgIHRoaXMuaW50ZXJpb3JSaW5nc1tpXVtqXS5fd3JpdGVUd2tiUG9pbnQodHdrYiwgcHJlY2lzaW9uLCBwcmV2aW91c1BvaW50KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHR3a2IuYnVmZmVyO1xyXG59O1xyXG5cclxuUG9seWdvbi5wcm90b3R5cGUuX2dldFdrYlNpemUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgY29vcmRpbmF0ZVNpemUgPSAxNjtcclxuXHJcbiAgICBpZiAodGhpcy5oYXNaKVxyXG4gICAgICAgIGNvb3JkaW5hdGVTaXplICs9IDg7XHJcbiAgICBpZiAodGhpcy5oYXNNKVxyXG4gICAgICAgIGNvb3JkaW5hdGVTaXplICs9IDg7XHJcblxyXG4gICAgdmFyIHNpemUgPSAxICsgNCArIDQ7XHJcblxyXG4gICAgaWYgKHRoaXMuZXh0ZXJpb3JSaW5nLmxlbmd0aCA+IDApXHJcbiAgICAgICAgc2l6ZSArPSA0ICsgKHRoaXMuZXh0ZXJpb3JSaW5nLmxlbmd0aCAqIGNvb3JkaW5hdGVTaXplKTtcclxuXHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuaW50ZXJpb3JSaW5ncy5sZW5ndGg7IGkrKylcclxuICAgICAgICBzaXplICs9IDQgKyAodGhpcy5pbnRlcmlvclJpbmdzW2ldLmxlbmd0aCAqIGNvb3JkaW5hdGVTaXplKTtcclxuXHJcbiAgICByZXR1cm4gc2l6ZTtcclxufTtcclxuXHJcblBvbHlnb24ucHJvdG90eXBlLnRvR2VvSlNPTiA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XHJcbiAgICB2YXIgZ2VvSlNPTiA9IEdlb21ldHJ5LnByb3RvdHlwZS50b0dlb0pTT04uY2FsbCh0aGlzLCBvcHRpb25zKTtcclxuICAgIGdlb0pTT04udHlwZSA9IFR5cGVzLmdlb0pTT04uUG9seWdvbjtcclxuICAgIGdlb0pTT04uY29vcmRpbmF0ZXMgPSBbXTtcclxuXHJcbiAgICBpZiAodGhpcy5leHRlcmlvclJpbmcubGVuZ3RoID4gMCkge1xyXG4gICAgICAgIHZhciBleHRlcmlvclJpbmcgPSBbXTtcclxuXHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmV4dGVyaW9yUmluZy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5oYXNaKVxyXG4gICAgICAgICAgICAgICAgZXh0ZXJpb3JSaW5nLnB1c2goW3RoaXMuZXh0ZXJpb3JSaW5nW2ldLngsIHRoaXMuZXh0ZXJpb3JSaW5nW2ldLnksIHRoaXMuZXh0ZXJpb3JSaW5nW2ldLnpdKTtcclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgZXh0ZXJpb3JSaW5nLnB1c2goW3RoaXMuZXh0ZXJpb3JSaW5nW2ldLngsIHRoaXMuZXh0ZXJpb3JSaW5nW2ldLnldKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGdlb0pTT04uY29vcmRpbmF0ZXMucHVzaChleHRlcmlvclJpbmcpO1xyXG4gICAgfVxyXG5cclxuICAgIGZvciAodmFyIGogPSAwOyBqIDwgdGhpcy5pbnRlcmlvclJpbmdzLmxlbmd0aDsgaisrKSB7XHJcbiAgICAgICAgdmFyIGludGVyaW9yUmluZyA9IFtdO1xyXG5cclxuICAgICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMuaW50ZXJpb3JSaW5nc1tqXS5sZW5ndGg7IGsrKykge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5oYXNaKVxyXG4gICAgICAgICAgICAgICAgaW50ZXJpb3JSaW5nLnB1c2goW3RoaXMuaW50ZXJpb3JSaW5nc1tqXVtrXS54LCB0aGlzLmludGVyaW9yUmluZ3Nbal1ba10ueSwgdGhpcy5pbnRlcmlvclJpbmdzW2pdW2tdLnpdKTtcclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgaW50ZXJpb3JSaW5nLnB1c2goW3RoaXMuaW50ZXJpb3JSaW5nc1tqXVtrXS54LCB0aGlzLmludGVyaW9yUmluZ3Nbal1ba10ueV0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZ2VvSlNPTi5jb29yZGluYXRlcy5wdXNoKGludGVyaW9yUmluZyk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGdlb0pTT047XHJcbn07XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/../node_modules/wkx/lib/polygon.js\n");

/***/ }),

/***/ "(action-browser)/../node_modules/wkx/lib/types.js":
/*!****************************************!*\
  !*** ../node_modules/wkx/lib/types.js ***!
  \****************************************/
/***/ ((module) => {

eval("module.exports = {\r\n    wkt: {\r\n        Point: 'POINT',\r\n        LineString: 'LINESTRING',\r\n        Polygon: 'POLYGON',\r\n        MultiPoint: 'MULTIPOINT',\r\n        MultiLineString: 'MULTILINESTRING',\r\n        MultiPolygon: 'MULTIPOLYGON',\r\n        GeometryCollection: 'GEOMETRYCOLLECTION'\r\n    },\r\n    wkb: {\r\n        Point: 1,\r\n        LineString: 2,\r\n        Polygon: 3,\r\n        MultiPoint: 4,\r\n        MultiLineString: 5,\r\n        MultiPolygon: 6,\r\n        GeometryCollection: 7\r\n    },\r\n    geoJSON: {\r\n        Point: 'Point',\r\n        LineString: 'LineString',\r\n        Polygon: 'Polygon',\r\n        MultiPoint: 'MultiPoint',\r\n        MultiLineString: 'MultiLineString',\r\n        MultiPolygon: 'MultiPolygon',\r\n        GeometryCollection: 'GeometryCollection'\r\n    }\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uLi9ub2RlX21vZHVsZXMvd2t4L2xpYi90eXBlcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2NsaWVudC8uLi9ub2RlX21vZHVsZXMvd2t4L2xpYi90eXBlcy5qcz9hOTU4Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgd2t0OiB7XHJcbiAgICAgICAgUG9pbnQ6ICdQT0lOVCcsXHJcbiAgICAgICAgTGluZVN0cmluZzogJ0xJTkVTVFJJTkcnLFxyXG4gICAgICAgIFBvbHlnb246ICdQT0xZR09OJyxcclxuICAgICAgICBNdWx0aVBvaW50OiAnTVVMVElQT0lOVCcsXHJcbiAgICAgICAgTXVsdGlMaW5lU3RyaW5nOiAnTVVMVElMSU5FU1RSSU5HJyxcclxuICAgICAgICBNdWx0aVBvbHlnb246ICdNVUxUSVBPTFlHT04nLFxyXG4gICAgICAgIEdlb21ldHJ5Q29sbGVjdGlvbjogJ0dFT01FVFJZQ09MTEVDVElPTidcclxuICAgIH0sXHJcbiAgICB3a2I6IHtcclxuICAgICAgICBQb2ludDogMSxcclxuICAgICAgICBMaW5lU3RyaW5nOiAyLFxyXG4gICAgICAgIFBvbHlnb246IDMsXHJcbiAgICAgICAgTXVsdGlQb2ludDogNCxcclxuICAgICAgICBNdWx0aUxpbmVTdHJpbmc6IDUsXHJcbiAgICAgICAgTXVsdGlQb2x5Z29uOiA2LFxyXG4gICAgICAgIEdlb21ldHJ5Q29sbGVjdGlvbjogN1xyXG4gICAgfSxcclxuICAgIGdlb0pTT046IHtcclxuICAgICAgICBQb2ludDogJ1BvaW50JyxcclxuICAgICAgICBMaW5lU3RyaW5nOiAnTGluZVN0cmluZycsXHJcbiAgICAgICAgUG9seWdvbjogJ1BvbHlnb24nLFxyXG4gICAgICAgIE11bHRpUG9pbnQ6ICdNdWx0aVBvaW50JyxcclxuICAgICAgICBNdWx0aUxpbmVTdHJpbmc6ICdNdWx0aUxpbmVTdHJpbmcnLFxyXG4gICAgICAgIE11bHRpUG9seWdvbjogJ011bHRpUG9seWdvbicsXHJcbiAgICAgICAgR2VvbWV0cnlDb2xsZWN0aW9uOiAnR2VvbWV0cnlDb2xsZWN0aW9uJ1xyXG4gICAgfVxyXG59O1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/../node_modules/wkx/lib/types.js\n");

/***/ }),

/***/ "(action-browser)/../node_modules/wkx/lib/wktparser.js":
/*!********************************************!*\
  !*** ../node_modules/wkx/lib/wktparser.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = WktParser;\r\n\r\nvar Types = __webpack_require__(/*! ./types */ \"(action-browser)/../node_modules/wkx/lib/types.js\");\r\nvar Point = __webpack_require__(/*! ./point */ \"(action-browser)/../node_modules/wkx/lib/point.js\");\r\n\r\nfunction WktParser(value) {\r\n    this.value = value;\r\n    this.position = 0;\r\n}\r\n\r\nWktParser.prototype.match = function (tokens) {\r\n    this.skipWhitespaces();\r\n\r\n    for (var i = 0; i < tokens.length; i++) {\r\n        if (this.value.substring(this.position).indexOf(tokens[i]) === 0) {\r\n            this.position += tokens[i].length;\r\n            return tokens[i];\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nWktParser.prototype.matchRegex = function (tokens) {\r\n    this.skipWhitespaces();\r\n\r\n    for (var i = 0; i < tokens.length; i++) {\r\n        var match = this.value.substring(this.position).match(tokens[i]);\r\n\r\n        if (match) {\r\n            this.position += match[0].length;\r\n            return match;\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nWktParser.prototype.isMatch = function (tokens) {\r\n    this.skipWhitespaces();\r\n\r\n    for (var i = 0; i < tokens.length; i++) {\r\n        if (this.value.substring(this.position).indexOf(tokens[i]) === 0) {\r\n            this.position += tokens[i].length;\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nWktParser.prototype.matchType = function () {\r\n    var geometryType = this.match([Types.wkt.Point, Types.wkt.LineString, Types.wkt.Polygon, Types.wkt.MultiPoint,\r\n    Types.wkt.MultiLineString, Types.wkt.MultiPolygon, Types.wkt.GeometryCollection]);\r\n\r\n    if (!geometryType)\r\n        throw new Error('Expected geometry type');\r\n\r\n    return geometryType;\r\n};\r\n\r\nWktParser.prototype.matchDimension = function () {\r\n    var dimension = this.match(['ZM', 'Z', 'M']);\r\n\r\n    switch (dimension) {\r\n        case 'ZM': return { hasZ: true, hasM: true };\r\n        case 'Z': return { hasZ: true, hasM: false };\r\n        case 'M': return { hasZ: false, hasM: true };\r\n        default: return { hasZ: false, hasM: false };\r\n    }\r\n};\r\n\r\nWktParser.prototype.expectGroupStart = function () {\r\n    if (!this.isMatch(['(']))\r\n        throw new Error('Expected group start');\r\n};\r\n\r\nWktParser.prototype.expectGroupEnd = function () {\r\n    if (!this.isMatch([')']))\r\n        throw new Error('Expected group end');\r\n};\r\n\r\nWktParser.prototype.matchCoordinate = function (options) {\r\n    var match;\r\n\r\n    if (options.hasZ && options.hasM)\r\n        match = this.matchRegex([/^(\\S*)\\s+(\\S*)\\s+(\\S*)\\s+([^\\s,)]*)/]);\r\n    else if (options.hasZ || options.hasM)\r\n        match = this.matchRegex([/^(\\S*)\\s+(\\S*)\\s+([^\\s,)]*)/]);\r\n    else\r\n        match = this.matchRegex([/^(\\S*)\\s+([^\\s,)]*)/]);\r\n\r\n    if (!match)\r\n        throw new Error('Expected coordinates');\r\n\r\n    if (options.hasZ && options.hasM)\r\n        return new Point(parseFloat(match[1]), parseFloat(match[2]), parseFloat(match[3]), parseFloat(match[4]));\r\n    else if (options.hasZ)\r\n        return new Point(parseFloat(match[1]), parseFloat(match[2]), parseFloat(match[3]));\r\n    else if (options.hasM)\r\n        return new Point(parseFloat(match[1]), parseFloat(match[2]), undefined, parseFloat(match[3]));\r\n    else\r\n        return new Point(parseFloat(match[1]), parseFloat(match[2]));\r\n};\r\n\r\nWktParser.prototype.matchCoordinates = function (options) {\r\n    var coordinates = [];\r\n\r\n    do {\r\n        var startsWithBracket = this.isMatch(['(']);\r\n\r\n        coordinates.push(this.matchCoordinate(options));\r\n\r\n        if (startsWithBracket)\r\n            this.expectGroupEnd();\r\n    } while (this.isMatch([',']));\r\n\r\n    return coordinates;\r\n};\r\n\r\nWktParser.prototype.skipWhitespaces = function () {\r\n    while (this.position < this.value.length && this.value[this.position] === ' ')\r\n        this.position++;\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uLi9ub2RlX21vZHVsZXMvd2t4L2xpYi93a3RwYXJzZXIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBLFlBQVksbUJBQU8sQ0FBQyxrRUFBUztBQUM3QixZQUFZLG1CQUFPLENBQUMsa0VBQVM7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG1CQUFtQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsbUJBQW1CO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsbUJBQW1CO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUIsMkJBQTJCO0FBQzNCLDJCQUEyQjtBQUMzQiwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2NsaWVudC8uLi9ub2RlX21vZHVsZXMvd2t4L2xpYi93a3RwYXJzZXIuanM/NWFjNCJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFdrdFBhcnNlcjtcclxuXHJcbnZhciBUeXBlcyA9IHJlcXVpcmUoJy4vdHlwZXMnKTtcclxudmFyIFBvaW50ID0gcmVxdWlyZSgnLi9wb2ludCcpO1xyXG5cclxuZnVuY3Rpb24gV2t0UGFyc2VyKHZhbHVlKSB7XHJcbiAgICB0aGlzLnZhbHVlID0gdmFsdWU7XHJcbiAgICB0aGlzLnBvc2l0aW9uID0gMDtcclxufVxyXG5cclxuV2t0UGFyc2VyLnByb3RvdHlwZS5tYXRjaCA9IGZ1bmN0aW9uICh0b2tlbnMpIHtcclxuICAgIHRoaXMuc2tpcFdoaXRlc3BhY2VzKCk7XHJcblxyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBpZiAodGhpcy52YWx1ZS5zdWJzdHJpbmcodGhpcy5wb3NpdGlvbikuaW5kZXhPZih0b2tlbnNbaV0pID09PSAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMucG9zaXRpb24gKz0gdG9rZW5zW2ldLmxlbmd0aDtcclxuICAgICAgICAgICAgcmV0dXJuIHRva2Vuc1tpXTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIG51bGw7XHJcbn07XHJcblxyXG5Xa3RQYXJzZXIucHJvdG90eXBlLm1hdGNoUmVnZXggPSBmdW5jdGlvbiAodG9rZW5zKSB7XHJcbiAgICB0aGlzLnNraXBXaGl0ZXNwYWNlcygpO1xyXG5cclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgdmFyIG1hdGNoID0gdGhpcy52YWx1ZS5zdWJzdHJpbmcodGhpcy5wb3NpdGlvbikubWF0Y2godG9rZW5zW2ldKTtcclxuXHJcbiAgICAgICAgaWYgKG1hdGNoKSB7XHJcbiAgICAgICAgICAgIHRoaXMucG9zaXRpb24gKz0gbWF0Y2hbMF0ubGVuZ3RoO1xyXG4gICAgICAgICAgICByZXR1cm4gbWF0Y2g7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBudWxsO1xyXG59O1xyXG5cclxuV2t0UGFyc2VyLnByb3RvdHlwZS5pc01hdGNoID0gZnVuY3Rpb24gKHRva2Vucykge1xyXG4gICAgdGhpcy5za2lwV2hpdGVzcGFjZXMoKTtcclxuXHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGlmICh0aGlzLnZhbHVlLnN1YnN0cmluZyh0aGlzLnBvc2l0aW9uKS5pbmRleE9mKHRva2Vuc1tpXSkgPT09IDApIHtcclxuICAgICAgICAgICAgdGhpcy5wb3NpdGlvbiArPSB0b2tlbnNbaV0ubGVuZ3RoO1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG59O1xyXG5cclxuV2t0UGFyc2VyLnByb3RvdHlwZS5tYXRjaFR5cGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgZ2VvbWV0cnlUeXBlID0gdGhpcy5tYXRjaChbVHlwZXMud2t0LlBvaW50LCBUeXBlcy53a3QuTGluZVN0cmluZywgVHlwZXMud2t0LlBvbHlnb24sIFR5cGVzLndrdC5NdWx0aVBvaW50LFxyXG4gICAgVHlwZXMud2t0Lk11bHRpTGluZVN0cmluZywgVHlwZXMud2t0Lk11bHRpUG9seWdvbiwgVHlwZXMud2t0Lkdlb21ldHJ5Q29sbGVjdGlvbl0pO1xyXG5cclxuICAgIGlmICghZ2VvbWV0cnlUeXBlKVxyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgZ2VvbWV0cnkgdHlwZScpO1xyXG5cclxuICAgIHJldHVybiBnZW9tZXRyeVR5cGU7XHJcbn07XHJcblxyXG5Xa3RQYXJzZXIucHJvdG90eXBlLm1hdGNoRGltZW5zaW9uID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGRpbWVuc2lvbiA9IHRoaXMubWF0Y2goWydaTScsICdaJywgJ00nXSk7XHJcblxyXG4gICAgc3dpdGNoIChkaW1lbnNpb24pIHtcclxuICAgICAgICBjYXNlICdaTSc6IHJldHVybiB7IGhhc1o6IHRydWUsIGhhc006IHRydWUgfTtcclxuICAgICAgICBjYXNlICdaJzogcmV0dXJuIHsgaGFzWjogdHJ1ZSwgaGFzTTogZmFsc2UgfTtcclxuICAgICAgICBjYXNlICdNJzogcmV0dXJuIHsgaGFzWjogZmFsc2UsIGhhc006IHRydWUgfTtcclxuICAgICAgICBkZWZhdWx0OiByZXR1cm4geyBoYXNaOiBmYWxzZSwgaGFzTTogZmFsc2UgfTtcclxuICAgIH1cclxufTtcclxuXHJcbldrdFBhcnNlci5wcm90b3R5cGUuZXhwZWN0R3JvdXBTdGFydCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIGlmICghdGhpcy5pc01hdGNoKFsnKCddKSlcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIGdyb3VwIHN0YXJ0Jyk7XHJcbn07XHJcblxyXG5Xa3RQYXJzZXIucHJvdG90eXBlLmV4cGVjdEdyb3VwRW5kID0gZnVuY3Rpb24gKCkge1xyXG4gICAgaWYgKCF0aGlzLmlzTWF0Y2goWycpJ10pKVxyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgZ3JvdXAgZW5kJyk7XHJcbn07XHJcblxyXG5Xa3RQYXJzZXIucHJvdG90eXBlLm1hdGNoQ29vcmRpbmF0ZSA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XHJcbiAgICB2YXIgbWF0Y2g7XHJcblxyXG4gICAgaWYgKG9wdGlvbnMuaGFzWiAmJiBvcHRpb25zLmhhc00pXHJcbiAgICAgICAgbWF0Y2ggPSB0aGlzLm1hdGNoUmVnZXgoWy9eKFxcUyopXFxzKyhcXFMqKVxccysoXFxTKilcXHMrKFteXFxzLCldKikvXSk7XHJcbiAgICBlbHNlIGlmIChvcHRpb25zLmhhc1ogfHwgb3B0aW9ucy5oYXNNKVxyXG4gICAgICAgIG1hdGNoID0gdGhpcy5tYXRjaFJlZ2V4KFsvXihcXFMqKVxccysoXFxTKilcXHMrKFteXFxzLCldKikvXSk7XHJcbiAgICBlbHNlXHJcbiAgICAgICAgbWF0Y2ggPSB0aGlzLm1hdGNoUmVnZXgoWy9eKFxcUyopXFxzKyhbXlxccywpXSopL10pO1xyXG5cclxuICAgIGlmICghbWF0Y2gpXHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCBjb29yZGluYXRlcycpO1xyXG5cclxuICAgIGlmIChvcHRpb25zLmhhc1ogJiYgb3B0aW9ucy5oYXNNKVxyXG4gICAgICAgIHJldHVybiBuZXcgUG9pbnQocGFyc2VGbG9hdChtYXRjaFsxXSksIHBhcnNlRmxvYXQobWF0Y2hbMl0pLCBwYXJzZUZsb2F0KG1hdGNoWzNdKSwgcGFyc2VGbG9hdChtYXRjaFs0XSkpO1xyXG4gICAgZWxzZSBpZiAob3B0aW9ucy5oYXNaKVxyXG4gICAgICAgIHJldHVybiBuZXcgUG9pbnQocGFyc2VGbG9hdChtYXRjaFsxXSksIHBhcnNlRmxvYXQobWF0Y2hbMl0pLCBwYXJzZUZsb2F0KG1hdGNoWzNdKSk7XHJcbiAgICBlbHNlIGlmIChvcHRpb25zLmhhc00pXHJcbiAgICAgICAgcmV0dXJuIG5ldyBQb2ludChwYXJzZUZsb2F0KG1hdGNoWzFdKSwgcGFyc2VGbG9hdChtYXRjaFsyXSksIHVuZGVmaW5lZCwgcGFyc2VGbG9hdChtYXRjaFszXSkpO1xyXG4gICAgZWxzZVxyXG4gICAgICAgIHJldHVybiBuZXcgUG9pbnQocGFyc2VGbG9hdChtYXRjaFsxXSksIHBhcnNlRmxvYXQobWF0Y2hbMl0pKTtcclxufTtcclxuXHJcbldrdFBhcnNlci5wcm90b3R5cGUubWF0Y2hDb29yZGluYXRlcyA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XHJcbiAgICB2YXIgY29vcmRpbmF0ZXMgPSBbXTtcclxuXHJcbiAgICBkbyB7XHJcbiAgICAgICAgdmFyIHN0YXJ0c1dpdGhCcmFja2V0ID0gdGhpcy5pc01hdGNoKFsnKCddKTtcclxuXHJcbiAgICAgICAgY29vcmRpbmF0ZXMucHVzaCh0aGlzLm1hdGNoQ29vcmRpbmF0ZShvcHRpb25zKSk7XHJcblxyXG4gICAgICAgIGlmIChzdGFydHNXaXRoQnJhY2tldClcclxuICAgICAgICAgICAgdGhpcy5leHBlY3RHcm91cEVuZCgpO1xyXG4gICAgfSB3aGlsZSAodGhpcy5pc01hdGNoKFsnLCddKSk7XHJcblxyXG4gICAgcmV0dXJuIGNvb3JkaW5hdGVzO1xyXG59O1xyXG5cclxuV2t0UGFyc2VyLnByb3RvdHlwZS5za2lwV2hpdGVzcGFjZXMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB3aGlsZSAodGhpcy5wb3NpdGlvbiA8IHRoaXMudmFsdWUubGVuZ3RoICYmIHRoaXMudmFsdWVbdGhpcy5wb3NpdGlvbl0gPT09ICcgJylcclxuICAgICAgICB0aGlzLnBvc2l0aW9uKys7XHJcbn07XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/../node_modules/wkx/lib/wktparser.js\n");

/***/ }),

/***/ "(action-browser)/../node_modules/wkx/lib/wkx.js":
/*!**************************************!*\
  !*** ../node_modules/wkx/lib/wkx.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("exports.Types = __webpack_require__(/*! ./types */ \"(action-browser)/../node_modules/wkx/lib/types.js\");\r\nexports.Geometry = __webpack_require__(/*! ./geometry */ \"(action-browser)/../node_modules/wkx/lib/geometry.js\");\r\nexports.Point = __webpack_require__(/*! ./point */ \"(action-browser)/../node_modules/wkx/lib/point.js\");\r\nexports.LineString = __webpack_require__(/*! ./linestring */ \"(action-browser)/../node_modules/wkx/lib/linestring.js\");\r\nexports.Polygon = __webpack_require__(/*! ./polygon */ \"(action-browser)/../node_modules/wkx/lib/polygon.js\");\r\nexports.MultiPoint = __webpack_require__(/*! ./multipoint */ \"(action-browser)/../node_modules/wkx/lib/multipoint.js\");\r\nexports.MultiLineString = __webpack_require__(/*! ./multilinestring */ \"(action-browser)/../node_modules/wkx/lib/multilinestring.js\");\r\nexports.MultiPolygon = __webpack_require__(/*! ./multipolygon */ \"(action-browser)/../node_modules/wkx/lib/multipolygon.js\");\r\nexports.GeometryCollection = __webpack_require__(/*! ./geometrycollection */ \"(action-browser)/../node_modules/wkx/lib/geometrycollection.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uLi9ub2RlX21vZHVsZXMvd2t4L2xpYi93a3guanMiLCJtYXBwaW5ncyI6IkFBQUEsdUdBQWtDO0FBQ2xDLGdIQUF3QztBQUN4Qyx1R0FBa0M7QUFDbEMsc0hBQTRDO0FBQzVDLDZHQUFzQztBQUN0QyxzSEFBNEM7QUFDNUMscUlBQXNEO0FBQ3RELDRIQUFnRDtBQUNoRCw4SUFBNEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGllbnQvLi4vbm9kZV9tb2R1bGVzL3dreC9saWIvd2t4LmpzP2I2YzciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cy5UeXBlcyA9IHJlcXVpcmUoJy4vdHlwZXMnKTtcclxuZXhwb3J0cy5HZW9tZXRyeSA9IHJlcXVpcmUoJy4vZ2VvbWV0cnknKTtcclxuZXhwb3J0cy5Qb2ludCA9IHJlcXVpcmUoJy4vcG9pbnQnKTtcclxuZXhwb3J0cy5MaW5lU3RyaW5nID0gcmVxdWlyZSgnLi9saW5lc3RyaW5nJyk7XHJcbmV4cG9ydHMuUG9seWdvbiA9IHJlcXVpcmUoJy4vcG9seWdvbicpO1xyXG5leHBvcnRzLk11bHRpUG9pbnQgPSByZXF1aXJlKCcuL211bHRpcG9pbnQnKTtcclxuZXhwb3J0cy5NdWx0aUxpbmVTdHJpbmcgPSByZXF1aXJlKCcuL211bHRpbGluZXN0cmluZycpO1xyXG5leHBvcnRzLk11bHRpUG9seWdvbiA9IHJlcXVpcmUoJy4vbXVsdGlwb2x5Z29uJyk7XHJcbmV4cG9ydHMuR2VvbWV0cnlDb2xsZWN0aW9uID0gcmVxdWlyZSgnLi9nZW9tZXRyeWNvbGxlY3Rpb24nKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/../node_modules/wkx/lib/wkx.js\n");

/***/ }),

/***/ "(action-browser)/../node_modules/wkx/lib/zigzag.js":
/*!*****************************************!*\
  !*** ../node_modules/wkx/lib/zigzag.js ***!
  \*****************************************/
/***/ ((module) => {

eval("module.exports = {\r\n    encode: function (value) {\r\n        return (value << 1) ^ (value >> 31);\r\n    },\r\n    decode: function (value) {\r\n        return (value >> 1) ^ (-(value & 1));\r\n    }\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uLi9ub2RlX21vZHVsZXMvd2t4L2xpYi96aWd6YWcuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xpZW50Ly4uL25vZGVfbW9kdWxlcy93a3gvbGliL3ppZ3phZy5qcz82OGJhIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgZW5jb2RlOiBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICByZXR1cm4gKHZhbHVlIDw8IDEpIF4gKHZhbHVlID4+IDMxKTtcclxuICAgIH0sXHJcbiAgICBkZWNvZGU6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgIHJldHVybiAodmFsdWUgPj4gMSkgXiAoLSh2YWx1ZSAmIDEpKTtcclxuICAgIH1cclxufTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/../node_modules/wkx/lib/zigzag.js\n");

/***/ })

};
;